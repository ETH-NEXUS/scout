{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Analyze VCFs and collaborate on solving rare diseases quicker What is Scout? Simple - Analyze variants in a simple to use web interface. Aggregation - Combine results from multiple analyses and VCFs into a centralized database. Collaboration - Write comments and share cases between users and institutes. New entry in the blog : What's new in 4.18?","title":"Introduction"},{"location":"#what-is-scout","text":"Simple - Analyze variants in a simple to use web interface. Aggregation - Combine results from multiple analyses and VCFs into a centralized database. Collaboration - Write comments and share cases between users and institutes. New entry in the blog : What's new in 4.18?","title":"What is Scout?"},{"location":"GLOSSARY/","text":"Scout","title":"-Glossary"},{"location":"GLOSSARY/#scout","text":"","title":"Scout"},{"location":"faq/","text":"FAQ My email is white listed but I can't log into Scout You can be logged into multiple Google accounts at the same time. If you are only logged into one account, it will automatically be used when you click \"Login with Google\". Visit Google and click your avatar in the top right corner and \"Add account\" and log with your Scout connected account. Next time you access Scout you will be presented with an option of which Google account to use.","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#my-email-is-white-listed-but-i-cant-log-into-scout","text":"You can be logged into multiple Google accounts at the same time. If you are only logged into one account, it will automatically be used when you click \"Login with Google\". Visit Google and click your avatar in the top right corner and \"Add account\" and log with your Scout connected account. Next time you access Scout you will be presented with an option of which Google account to use.","title":"My email is white listed but I can't log into Scout"},{"location":"install/","text":"Install Scout This guide will walk you through how to setup a working instance of scout. The instructions are divided into multiple sections. One section describes how to set up a demo version with some cases just to see how it could look like. 0. Intro Make sure you have a mongod process running. First install mongodb and follow the instructions. 1. Install Installation of Scout is possible via pip or GitHub. Let's start by pulling down the GitHub repository with the source code. GitHub git clone https://github.com/Clinical-Genomics/scout cd scout pip install --requirement requirements.txt --editable . Pip To get the latest version, use the above. When using pip the latest stable release will be installed. pip install scout-browser 2. Setup Full setup To initialize a working instance with all genes, diseases etc run scout setup database for more info, run scout --help If you intent to use authentication, make sure you are using a Google email! The previous command setup the database with a curated collection of gene definitions with links to OMIM along with HPO phenotype terms. Now we will load some example data. Scout expects the analysis to be accomplished using various gene panels so let's load one and then our first analysis case: scout load panel scout/demo/panel_1.txt scout load case scout/demo/643594.config.yaml For more information about populating the database, please see admin-guide . Demo This option is used to quickly get a operating instance with some example data scout setup demo scout --demo serve","title":"Installation"},{"location":"install/#install-scout","text":"This guide will walk you through how to setup a working instance of scout. The instructions are divided into multiple sections. One section describes how to set up a demo version with some cases just to see how it could look like.","title":"Install Scout"},{"location":"install/#0-intro","text":"Make sure you have a mongod process running. First install mongodb and follow the instructions.","title":"0. Intro"},{"location":"install/#1-install","text":"Installation of Scout is possible via pip or GitHub. Let's start by pulling down the GitHub repository with the source code.","title":"1. Install"},{"location":"install/#github","text":"git clone https://github.com/Clinical-Genomics/scout cd scout pip install --requirement requirements.txt --editable .","title":"GitHub"},{"location":"install/#pip","text":"To get the latest version, use the above. When using pip the latest stable release will be installed. pip install scout-browser","title":"Pip"},{"location":"install/#2-setup","text":"","title":"2. Setup"},{"location":"install/#full-setup","text":"To initialize a working instance with all genes, diseases etc run scout setup database for more info, run scout --help If you intent to use authentication, make sure you are using a Google email! The previous command setup the database with a curated collection of gene definitions with links to OMIM along with HPO phenotype terms. Now we will load some example data. Scout expects the analysis to be accomplished using various gene panels so let's load one and then our first analysis case: scout load panel scout/demo/panel_1.txt scout load case scout/demo/643594.config.yaml For more information about populating the database, please see admin-guide .","title":"Full setup"},{"location":"install/#demo","text":"This option is used to quickly get a operating instance with some example data scout setup demo scout --demo serve","title":"Demo"},{"location":"admin-guide/","text":"Admin Guide This includes instructions for bioinformaticians to install, manage and update a scout instance Admin Guide Setup Loading Load config Genes, transcripts and exons HPO terms Annotations Server Chanjo coverage integration Loqusdb integration MatchMaker Exchange integration Indexes Scripts folder Backup and restore","title":"Intro"},{"location":"admin-guide/#admin-guide","text":"This includes instructions for bioinformaticians to install, manage and update a scout instance Admin Guide Setup Loading Load config Genes, transcripts and exons HPO terms Annotations Server Chanjo coverage integration Loqusdb integration MatchMaker Exchange integration Indexes Scripts folder Backup and restore","title":"Admin Guide"},{"location":"admin-guide/annotations/","text":"Annotations Scout is a primarily a visualisation tool with some other functionality. One could imagine that in the future, some or all annotations could be performed by Scout. For now scout will look for some known keys when uploading a VCF and extract information for those. VEP is the tool supported for functional and regional annotations at the moment, SnpEff will be added in the near future. For the other types of annotations Scout will look for certain keys in the INFO field of the vcf and expect the value to be of a specific type. This means that there is not a dependency on any other specific annotation tool besides VEP, just make sure that the key and values are correct according to the specification below. Rank score One of the hard problem when dealing with whole genome data is the huge amount variants that are generated in every analysis. Scout was developed to be used in rare variant analysis, this means that there is ony a small number of variants that are actually interesting to look at. We do not want to store all variants from each case in a database that should be able to controll thousands of cases. To solve this problem we are working with rank scores, each variant is scored according to a scoring schema then we only upload and sort the variants based on their rank score. In this way the users can start by looking at the variants that looks potentially most dangerous from a bioinformatic perspective. We use the tool genmod to (among other things) score the variant, but as long as there is a RankScore -field in the INFO field of the VCF with a float as value it is handeled by Scout. Annotation keys and tool suggestions In this section all the different annotation keys and suggestions of tools that can be used to annotate them are listed. If nothing else is stated Scout will search in the INFO field to locate the key value pair. Frequencies 1000G The frequency from the 1000G population database. Key: 1000G Value: Float Tools: VEP , SnpEff , genmod , vcfanno 1000G_MAX_AF The maximum allele frequency of all populations in the 1000G population database. Key: 1000G_MAX_AF Value: Float Tools: custom made, we have modified the 1000G file and use genmod ExAC The frequency from the ExAC population database. Key: EXACAF Value: Float Tools: VEP , SnpEff , genmod , vcfanno ExAC_MAX_AF The maximum allele frequency of all populations ExAC population database. Key: EXAC_MAX_AF Value: Float Tools: custom made, we have modified the exac file and use genmod Severity CADD score The Combined Annotation Dependent Depletion( CADD ) score. A prediction of the deleterioussness for a variant. Key: CADD or cadd in VEP CSQ field Value: Float Tools: VEP , SnpEff , genmod , vcfanno SIFT The SIFT ) prediction for how a variation affects the protein. Key: CSQ - SIFT Value: String Tools: VEP PolyPhen The PolyPhen ) prediction for how a variation affects the protein. Key: CSQ - PolyPhen Value: String Tools: VEP Rank score The combined rank score for a variant. For exact info see test Key: RankScore Value: Float Tools: genmod Conservation Gerp The Genomic Evolutionary Rate Profiling( GERP ) conservation string. An estimation of how conserved this position is. Key: GERP++_RS_prediction_term Value: String Tools: SnpSift phastCons The PHASTcons conservation string. Key: phastCons100way_vertebrate_prediction_term Value: String Tools: SnpSift phylop The phylop 100 way predicted conservation string. Key: phyloP100way_vertebrate_prediction_term Value: String Tools: SnpSift Inheritance Genetic models What genetics models are followed for the variant in the particular family Key: GeneticModels Value: list of String Tools: genmod Autosomal Recessive Compounds What variants is this variant in Autosomal Recessive Compound with? Key: Compounds Value: list of String Tools: genmod","title":"Annotations"},{"location":"admin-guide/annotations/#annotations","text":"Scout is a primarily a visualisation tool with some other functionality. One could imagine that in the future, some or all annotations could be performed by Scout. For now scout will look for some known keys when uploading a VCF and extract information for those. VEP is the tool supported for functional and regional annotations at the moment, SnpEff will be added in the near future. For the other types of annotations Scout will look for certain keys in the INFO field of the vcf and expect the value to be of a specific type. This means that there is not a dependency on any other specific annotation tool besides VEP, just make sure that the key and values are correct according to the specification below.","title":"Annotations"},{"location":"admin-guide/annotations/#rank-score","text":"One of the hard problem when dealing with whole genome data is the huge amount variants that are generated in every analysis. Scout was developed to be used in rare variant analysis, this means that there is ony a small number of variants that are actually interesting to look at. We do not want to store all variants from each case in a database that should be able to controll thousands of cases. To solve this problem we are working with rank scores, each variant is scored according to a scoring schema then we only upload and sort the variants based on their rank score. In this way the users can start by looking at the variants that looks potentially most dangerous from a bioinformatic perspective. We use the tool genmod to (among other things) score the variant, but as long as there is a RankScore -field in the INFO field of the VCF with a float as value it is handeled by Scout.","title":"Rank score"},{"location":"admin-guide/annotations/#annotation-keys-and-tool-suggestions","text":"In this section all the different annotation keys and suggestions of tools that can be used to annotate them are listed. If nothing else is stated Scout will search in the INFO field to locate the key value pair.","title":"Annotation keys and tool suggestions"},{"location":"admin-guide/annotations/#frequencies","text":"","title":"Frequencies"},{"location":"admin-guide/annotations/#1000g","text":"The frequency from the 1000G population database. Key: 1000G Value: Float Tools: VEP , SnpEff , genmod , vcfanno","title":"1000G"},{"location":"admin-guide/annotations/#1000g_max_af","text":"The maximum allele frequency of all populations in the 1000G population database. Key: 1000G_MAX_AF Value: Float Tools: custom made, we have modified the 1000G file and use genmod","title":"1000G_MAX_AF"},{"location":"admin-guide/annotations/#exac","text":"The frequency from the ExAC population database. Key: EXACAF Value: Float Tools: VEP , SnpEff , genmod , vcfanno","title":"ExAC"},{"location":"admin-guide/annotations/#exac_max_af","text":"The maximum allele frequency of all populations ExAC population database. Key: EXAC_MAX_AF Value: Float Tools: custom made, we have modified the exac file and use genmod","title":"ExAC_MAX_AF"},{"location":"admin-guide/annotations/#severity","text":"","title":"Severity"},{"location":"admin-guide/annotations/#cadd-score","text":"The Combined Annotation Dependent Depletion( CADD ) score. A prediction of the deleterioussness for a variant. Key: CADD or cadd in VEP CSQ field Value: Float Tools: VEP , SnpEff , genmod , vcfanno","title":"CADD score"},{"location":"admin-guide/annotations/#sift","text":"The SIFT ) prediction for how a variation affects the protein. Key: CSQ - SIFT Value: String Tools: VEP","title":"SIFT"},{"location":"admin-guide/annotations/#polyphen","text":"The PolyPhen ) prediction for how a variation affects the protein. Key: CSQ - PolyPhen Value: String Tools: VEP","title":"PolyPhen"},{"location":"admin-guide/annotations/#rank-score_1","text":"The combined rank score for a variant. For exact info see test Key: RankScore Value: Float Tools: genmod","title":"Rank score"},{"location":"admin-guide/annotations/#conservation","text":"","title":"Conservation"},{"location":"admin-guide/annotations/#gerp","text":"The Genomic Evolutionary Rate Profiling( GERP ) conservation string. An estimation of how conserved this position is. Key: GERP++_RS_prediction_term Value: String Tools: SnpSift","title":"Gerp"},{"location":"admin-guide/annotations/#phastcons","text":"The PHASTcons conservation string. Key: phastCons100way_vertebrate_prediction_term Value: String Tools: SnpSift","title":"phastCons"},{"location":"admin-guide/annotations/#phylop","text":"The phylop 100 way predicted conservation string. Key: phyloP100way_vertebrate_prediction_term Value: String Tools: SnpSift","title":"phylop"},{"location":"admin-guide/annotations/#inheritance","text":"","title":"Inheritance"},{"location":"admin-guide/annotations/#genetic-models","text":"What genetics models are followed for the variant in the particular family Key: GeneticModels Value: list of String Tools: genmod","title":"Genetic models"},{"location":"admin-guide/annotations/#autosomal-recessive-compounds","text":"What variants is this variant in Autosomal Recessive Compound with? Key: Compounds Value: list of String Tools: genmod","title":"Autosomal Recessive Compounds"},{"location":"admin-guide/backup/","text":"Backing up Scout In general it is best practice to follow the mongodb official recommendations for backing up a database. For a \"light\" backup there is a command in scout which works as a wrapper around mongodump . This command was added to ease the process of backing up without including static information. Some of the collections are better to recreate than to backup including genes, transcripts and especially the gigantic variants collection. Please make sure [ mongodump ] is on your PATH before running this backup command. Backup command To do an incomplete backup run: scout export database -o <path/to/folder/> This command will backup all non-static collections that saves user input data, namely: user_collection institute_collection event_collection case_collection panel_collection acmg_collection clinvar_submission_collection filter_collection The following will not be backed up but can easily be recreated: hgnc_collection hpo_term_collection disease_term_collection variant_collection clinvar_collection exon_collection transcript_collection filter_collection IF a user want to backup the whole database use the flag --all-collections , however in that case we recommend to follow mongodbs recommendations on database backups Recreate database To recreate do the following steps: Use a fully operational instance of scout, either an existing one or create one with scout setup database Run command mongorestore --gzip path/to/dump . Read docs for mongorestore for more information Everything should now be in place except for the variants. Add the variants for a case with scout upload variants <case_id> . See --help for more info.","title":"Backup and restore"},{"location":"admin-guide/backup/#backing-up-scout","text":"In general it is best practice to follow the mongodb official recommendations for backing up a database. For a \"light\" backup there is a command in scout which works as a wrapper around mongodump . This command was added to ease the process of backing up without including static information. Some of the collections are better to recreate than to backup including genes, transcripts and especially the gigantic variants collection. Please make sure [ mongodump ] is on your PATH before running this backup command.","title":"Backing up Scout"},{"location":"admin-guide/backup/#backup-command","text":"To do an incomplete backup run: scout export database -o <path/to/folder/> This command will backup all non-static collections that saves user input data, namely: user_collection institute_collection event_collection case_collection panel_collection acmg_collection clinvar_submission_collection filter_collection The following will not be backed up but can easily be recreated: hgnc_collection hpo_term_collection disease_term_collection variant_collection clinvar_collection exon_collection transcript_collection filter_collection IF a user want to backup the whole database use the flag --all-collections , however in that case we recommend to follow mongodbs recommendations on database backups","title":"Backup command"},{"location":"admin-guide/backup/#recreate-database","text":"To recreate do the following steps: Use a fully operational instance of scout, either an existing one or create one with scout setup database Run command mongorestore --gzip path/to/dump . Read docs for mongorestore for more information Everything should now be in place except for the variants. Add the variants for a case with scout upload variants <case_id> . See --help for more info.","title":"Recreate database"},{"location":"admin-guide/chanjo_coverage_integration/","text":"Chanjo coverage integration Scout may be configured to visualize coverage reports produced by Chanjo . To do so it is necessary to install the python package Chanjo and its report visualization app, chanjo-report . Both these programs require a database to store samples names, transcript specifications and statistics relative to the trascript coverage for all samples. Note that chanjo can be used as a standalone but chanjo-report needs to have access to the data produced by chanjo to generate coverage reports. Scout does not require chanjo installed in the path to visualize coverage reports, but it is necessary to install chanjo-report and set up the connection to a database containing coverage data in order to use this fuctionality . Chanjo database Chanjo-report (and chanjo) work with MySQL and SQLite databases. This guide explains how to set up a MySQL database since this database is the one used in production at Clinical Genomics. For a guide on how to install MySQL on your server click here . Once the database and the administrator user and password are configured, you can create the new database to contain the chanjo structures. To do so, from a terminal type: mysql -u admin_user -padmin_password #no space between -p and password mysql> create database chanjo4_demo; mysql> exit To create a new empty database download the empty schema chanjo4_structure.sql under scout/demo/resources . The command to restore the database from this dump file is: mysql -u admin_user -padmin_password chanjo4_demo < path/to/chanjo4_structure.sql #no space between -p and password To create instead a demo database containing coverage data for genes in panel1 for the samples used in the demo version of scout, you might download the schema chanjo4_demo.sql . This file is present in the folder scout/demo , along with the rest of the demo data. The syntax to create the database is the same as above. Chanjo database consists of 3 tables: - sample : Field Type Null Key Default Extra id varchar(32) NO PRI NULL group_id varchar(128) YES MUL NULL source varchar(256) YES NULL created_at datetime YES NULL name varchar(128) YES NULL group_name varchar(128) YES NULL transcript : Field Type Null Key Default Extra id varchar(32) NO PRI NULL gene_id int(11) NO MUL NULL gene_name varchar(32) YES MUL NULL chromosome varchar(10) YES NULL length int(11) YES NULL transcript_stat : Field Type Null Key Default Extra id int(11) NO PRI NULL auto_increment mean_coverage float NO NULL completeness_10 float YES NULL completeness_15 float YES NULL completeness_20 float YES NULL completeness_50 float YES NULL completeness_100 float YES NULL threshold int(11) YES NULL _incomplete_exons text YES NULL sample_id varchar(32) NO MUL NULL transcript_id varchar(32) NO MUL NULL chanjo-report This package might be downloaded and installed via git clone and using pip install command (instructions here ), but perhaps the easiest way to make sure that it will serve pages once the app is invoked by scout is to install it with this command: pip install scout-browser[coverage] Just make sure that both scout and chanjo-report are installed on the same virtual environment (if you are using one). Note that chanjo-report requires the package pymysql if it will be connecting to a MySQL database. So if it is not found in the environment you can install it with this command: pip install pymysql Enabling the chanjo coverage integration in scout In order to enable the support for the coverage report visualization in scout the configuration file named config.py under scout/server must be modified to include the following line: SQLALCHEMY_DATABASE_URI = 'mysql+pymysql://username:password@host:port/chanjo4_demo' The database URI provided in the line above refers to the MySQL database with the coverage data, so user and password are those used to connect to the database. Default database host and port are localhost and 3306 respectively. If your scout implementation is using another configuration file other than the default config.py then the database connection URI must be added to this file instead. Once all the above steps are executed you should see the \"Coverage report\" option on the left side bar under the scout case page. The buttons allow to generate HTML and PDF reports for the case samples.","title":"Chanjo coverage integration"},{"location":"admin-guide/chanjo_coverage_integration/#chanjo-coverage-integration","text":"Scout may be configured to visualize coverage reports produced by Chanjo . To do so it is necessary to install the python package Chanjo and its report visualization app, chanjo-report . Both these programs require a database to store samples names, transcript specifications and statistics relative to the trascript coverage for all samples. Note that chanjo can be used as a standalone but chanjo-report needs to have access to the data produced by chanjo to generate coverage reports. Scout does not require chanjo installed in the path to visualize coverage reports, but it is necessary to install chanjo-report and set up the connection to a database containing coverage data in order to use this fuctionality .","title":"Chanjo coverage integration"},{"location":"admin-guide/chanjo_coverage_integration/#chanjo-database","text":"Chanjo-report (and chanjo) work with MySQL and SQLite databases. This guide explains how to set up a MySQL database since this database is the one used in production at Clinical Genomics. For a guide on how to install MySQL on your server click here . Once the database and the administrator user and password are configured, you can create the new database to contain the chanjo structures. To do so, from a terminal type: mysql -u admin_user -padmin_password #no space between -p and password mysql> create database chanjo4_demo; mysql> exit To create a new empty database download the empty schema chanjo4_structure.sql under scout/demo/resources . The command to restore the database from this dump file is: mysql -u admin_user -padmin_password chanjo4_demo < path/to/chanjo4_structure.sql #no space between -p and password To create instead a demo database containing coverage data for genes in panel1 for the samples used in the demo version of scout, you might download the schema chanjo4_demo.sql . This file is present in the folder scout/demo , along with the rest of the demo data. The syntax to create the database is the same as above. Chanjo database consists of 3 tables: - sample : Field Type Null Key Default Extra id varchar(32) NO PRI NULL group_id varchar(128) YES MUL NULL source varchar(256) YES NULL created_at datetime YES NULL name varchar(128) YES NULL group_name varchar(128) YES NULL transcript : Field Type Null Key Default Extra id varchar(32) NO PRI NULL gene_id int(11) NO MUL NULL gene_name varchar(32) YES MUL NULL chromosome varchar(10) YES NULL length int(11) YES NULL transcript_stat : Field Type Null Key Default Extra id int(11) NO PRI NULL auto_increment mean_coverage float NO NULL completeness_10 float YES NULL completeness_15 float YES NULL completeness_20 float YES NULL completeness_50 float YES NULL completeness_100 float YES NULL threshold int(11) YES NULL _incomplete_exons text YES NULL sample_id varchar(32) NO MUL NULL transcript_id varchar(32) NO MUL NULL","title":"Chanjo database"},{"location":"admin-guide/chanjo_coverage_integration/#chanjo-report","text":"This package might be downloaded and installed via git clone and using pip install command (instructions here ), but perhaps the easiest way to make sure that it will serve pages once the app is invoked by scout is to install it with this command: pip install scout-browser[coverage] Just make sure that both scout and chanjo-report are installed on the same virtual environment (if you are using one). Note that chanjo-report requires the package pymysql if it will be connecting to a MySQL database. So if it is not found in the environment you can install it with this command: pip install pymysql","title":"chanjo-report"},{"location":"admin-guide/chanjo_coverage_integration/#enabling-the-chanjo-coverage-integration-in-scout","text":"In order to enable the support for the coverage report visualization in scout the configuration file named config.py under scout/server must be modified to include the following line: SQLALCHEMY_DATABASE_URI = 'mysql+pymysql://username:password@host:port/chanjo4_demo' The database URI provided in the line above refers to the MySQL database with the coverage data, so user and password are those used to connect to the database. Default database host and port are localhost and 3306 respectively. If your scout implementation is using another configuration file other than the default config.py then the database connection URI must be added to this file instead. Once all the above steps are executed you should see the \"Coverage report\" option on the left side bar under the scout case page. The buttons allow to generate HTML and PDF reports for the case samples.","title":"Enabling the chanjo coverage integration in scout"},{"location":"admin-guide/export/","text":"Export data from Scout There are many scenarios where users might want to export information from scout. This document will describe the alternatives that exists. Variants Export all causative variants for a institute with the command scout export variants --collaborator cust000 .","title":"Export data from Scout"},{"location":"admin-guide/export/#export-data-from-scout","text":"There are many scenarios where users might want to export information from scout. This document will describe the alternatives that exists.","title":"Export data from Scout"},{"location":"admin-guide/export/#variants","text":"Export all causative variants for a institute with the command scout export variants --collaborator cust000 .","title":"Variants"},{"location":"admin-guide/genes/","text":"Genes, transcripts and exons As described in the user guide, Scout creates it's own definition of genes and transcripts by connecting information from some different sources. In the world of bioinformatics information is often collected from a wide variety of sources that may be inconsistent. Therefore we try to create our own definitions as far as possible and then map the information back. The base for gene information is collected from HGNC since it is a well curated source of gene information. Coordinates for genes, transcripts and exons are collected from Ensembl biomart . Links to disease phenotypes are collected from OMIM , incomplete penetrance information is collected from HPO and intolerance to variation (pLI-scores) from ExAC . Update genes and transcripts To update the gene definitions use command scout update genes When running this command the latest version of all the above described sources is fetched and that database gets updated. Update/load exons The exons are fetched from ensembl through the ensembl biomart. To load or update the exon information please run command scout load exons where you can specify what build to use, default is 37 . There has been some problems to download from the ensembl biomart for build 38 , in this case one can download a flatfile from the ensembl martview and selecting: database: ensembl genes (current version) dataset: Human Genes (current version) Filters: Region: Chromosomes/scaffold (Choose 1-22, X, Y and MT) Attributes: Features: Unbox everything Structures: GENE (Choose Gene stable ID, Transcript stable ID, Strand, 5'UTR start, 5'UTR end, 3'UTR start, 3'UTR end) Structures: EXON (Choose Exon region start, Exon region end, Exon rank in transcript, Exon stable ID) Download this file and use command scout load exons --exons-file path/to/mart_export.txt --build 38","title":"Gene definitions"},{"location":"admin-guide/genes/#genes-transcripts-and-exons","text":"As described in the user guide, Scout creates it's own definition of genes and transcripts by connecting information from some different sources. In the world of bioinformatics information is often collected from a wide variety of sources that may be inconsistent. Therefore we try to create our own definitions as far as possible and then map the information back. The base for gene information is collected from HGNC since it is a well curated source of gene information. Coordinates for genes, transcripts and exons are collected from Ensembl biomart . Links to disease phenotypes are collected from OMIM , incomplete penetrance information is collected from HPO and intolerance to variation (pLI-scores) from ExAC .","title":"Genes, transcripts and exons"},{"location":"admin-guide/genes/#update-genes-and-transcripts","text":"To update the gene definitions use command scout update genes When running this command the latest version of all the above described sources is fetched and that database gets updated.","title":"Update genes and transcripts"},{"location":"admin-guide/genes/#updateload-exons","text":"The exons are fetched from ensembl through the ensembl biomart. To load or update the exon information please run command scout load exons where you can specify what build to use, default is 37 . There has been some problems to download from the ensembl biomart for build 38 , in this case one can download a flatfile from the ensembl martview and selecting: database: ensembl genes (current version) dataset: Human Genes (current version) Filters: Region: Chromosomes/scaffold (Choose 1-22, X, Y and MT) Attributes: Features: Unbox everything Structures: GENE (Choose Gene stable ID, Transcript stable ID, Strand, 5'UTR start, 5'UTR end, 3'UTR start, 3'UTR end) Structures: EXON (Choose Exon region start, Exon region end, Exon rank in transcript, Exon stable ID) Download this file and use command scout load exons --exons-file path/to/mart_export.txt --build 38","title":"Update/load exons"},{"location":"admin-guide/hpo/","text":"HPO terms Scout stores HPO terms that are defined in the Human Phenotype Ontology. Usage The terms are added on case level to describe the phenotype. There is also an option to use phenotype groups. The idea behind the groups are that cases can be ordered when performing meta analysies Update To update the HPO terms use command scout update hpo When running this command the latest version of the hpo terms are fetched and loaded into scout","title":"HPO terms"},{"location":"admin-guide/hpo/#hpo-terms","text":"Scout stores HPO terms that are defined in the Human Phenotype Ontology.","title":"HPO terms"},{"location":"admin-guide/hpo/#usage","text":"The terms are added on case level to describe the phenotype. There is also an option to use phenotype groups. The idea behind the groups are that cases can be ordered when performing meta analysies","title":"Usage"},{"location":"admin-guide/hpo/#update","text":"To update the HPO terms use command scout update hpo When running this command the latest version of the hpo terms are fetched and loaded into scout","title":"Update"},{"location":"admin-guide/indexes/","text":"Indexes The indexes that are used is displayed in scout/constants/indexes.md . If indexes are to be updated, added or removed this is the place to modify. To update indexes simply run the cli command scout index . Existing indexes can be viewed by scout view indexes .","title":"Indexes"},{"location":"admin-guide/indexes/#indexes","text":"The indexes that are used is displayed in scout/constants/indexes.md . If indexes are to be updated, added or removed this is the place to modify. To update indexes simply run the cli command scout index . Existing indexes can be viewed by scout view indexes .","title":"Indexes"},{"location":"admin-guide/institute/","text":"Institutes Institutes are objects that group users and cases. Users belong to a institute and in this way permissions to view cases can be handeld. Cases are always \"owned\" by an institute and thereby grants acces for all users within that institute to view and work with a case. Cases can be shared with other institutes. Institutes have a unique internal id and a display name that is what the users see when browsing. One or several users can be sanger recipients for a institute which means that when a user is pushing the button \"Order Sanger\" on the variant page an email is sent to all sanger recipients with relevant information, such as coordinates for a variant. Updating institutes All variables except 'internal_id' can be updated for a institute. Please run scout update institute for more information. Phenotype Groups Phenotype groups is a feature on institute level. So each institute can have their own set of phenotype groups. There is a default set of phenotype groups that all institutes will have access to, those are described in scout.constants.phenotype . To overwrite or add phenotype groups use cli function scout update groups . If specifying groups in a file, use a csv file where column one holds HPO-ids on the format HP:0000001 . Second column is optional and can include abbreviations for the phenotype groups. $scout update groups --help Usage: scout update groups [OPTIONS] INSTITUTE_ID Update the phenotype for a institute. If --add the groups will be added to the default groups. Else the groups will be replaced. Options: -p, --phenotype-group TEXT Add one or more phenotype groups to institute -a, --group-abbreviation TEXT Specify a phenotype group abbreviation -f, --group-file FILENAME CSV file with phenotype groups -a, --add If groups should be added instead of replacing existing groups --help Show this message and exit.","title":"Institutes"},{"location":"admin-guide/institute/#institutes","text":"Institutes are objects that group users and cases. Users belong to a institute and in this way permissions to view cases can be handeld. Cases are always \"owned\" by an institute and thereby grants acces for all users within that institute to view and work with a case. Cases can be shared with other institutes. Institutes have a unique internal id and a display name that is what the users see when browsing. One or several users can be sanger recipients for a institute which means that when a user is pushing the button \"Order Sanger\" on the variant page an email is sent to all sanger recipients with relevant information, such as coordinates for a variant.","title":"Institutes"},{"location":"admin-guide/institute/#updating-institutes","text":"All variables except 'internal_id' can be updated for a institute. Please run scout update institute for more information.","title":"Updating institutes"},{"location":"admin-guide/institute/#phenotype-groups","text":"Phenotype groups is a feature on institute level. So each institute can have their own set of phenotype groups. There is a default set of phenotype groups that all institutes will have access to, those are described in scout.constants.phenotype . To overwrite or add phenotype groups use cli function scout update groups . If specifying groups in a file, use a csv file where column one holds HPO-ids on the format HP:0000001 . Second column is optional and can include abbreviations for the phenotype groups. $scout update groups --help Usage: scout update groups [OPTIONS] INSTITUTE_ID Update the phenotype for a institute. If --add the groups will be added to the default groups. Else the groups will be replaced. Options: -p, --phenotype-group TEXT Add one or more phenotype groups to institute -a, --group-abbreviation TEXT Specify a phenotype group abbreviation -f, --group-file FILENAME CSV file with phenotype groups -a, --add If groups should be added instead of replacing existing groups --help Show this message and exit.","title":"Phenotype Groups"},{"location":"admin-guide/load-config/","text":"The load config Scout have the possibility to store loads of information about a case and the samples that are included. It is cumbersome to specify to many parameters on the command line so there is an option to give this information in a yaml formated config file. Here we can give scout some meta information about the analysis, how it was performed, information about family, samples etc. The basic structure of a load config looks like: owner: str(mandatory) family: str(mandatory) samples: - analysis_type: str(optional), [wgs,wes,panel,external] sample_id: str(mandatory) capture_kit: str(optional) father: str(mandatory) mother: str(mandatory) sample_name: str(mandatory) phenotype: str(mandatory), [affected, unaffected, unknown] sex: str(mandatory), [male, female, unknown] expected_coverage: int(mandatory) vcf2cytosure: str(optional) # path to CGH file bam_path: str(optional) # path to bam file rhocall_bed: str(optional) # path to bed file rhocall_wig: str(optional) # path to wig file upd_regions_bed: str(optional) # path to bed file upd_sites_bed: str(optional) # path to bed file tiddit_coverage_wig: str(optional) # path to wig file tissue_type: str(optional) tumor_type: str(optional) tmb: str(optional) # Tumor mutational burder [0,1000] msi: str(optional) # Microsatellite instability [0,60] tumor_purity: float # [0.1,1] vcf_snv: str(optional) vcf_sv: str(optional) vcf_cancer: str(optional) vcf_snv_research: str(optional) vcf_sv_research: str(optional) vcf_cancer_research: str(optional) madeline: str(optional) peddy_ped: str(optional) peddy_ped_check: str(optional) peddy_sex_check: str(optional) multiqc: str(optional) default_gene_panels: list[str](optional) gene_panels: list[str](optional) # ATM rare or cancer track: list[str][optional] # meta data rank_model_version: str(optional) sv_rank_model_version: str(optional) rank_score_threshold: float(optional) analysis_date: datetime(optional) human_genome_build: str(optional) Let's go through each field: owner each case has to have a owner, this refers to an existing institute in the scout instance family each case has to have a family id samples list of samples included in the case analysis_type specifies the analysis type for the sample samlple_id identifyer for a sample capture_kit for exome specifies the capture kit father sample id for father or 0 mother sample id for mother or 0 phenotype specifies the affection status of the sample in human readable format sex specifies the sex of the sample in human readable format expected_coverage the level of expected coverage bam_file Path to bam file to view alignments rhocall_bed Path to bed file to view alignments (Reference)[https://github.com/dnil/rhocall] rhocall_wig Path to wig file to view alignments (Reference)[https://github.com/dnil/rhocall] upd_regions_bed Path to bed file to view alignments (Reference)[https://github.com/bjhall/upd] upd_sites_bed Path to bed file to view alignments (Reference)[https://github.com/bjhall/upd] tiddit_coverage_wig Path to wig file to view alignments (Reference)[https://github.com/SciLifeLab/TIDDIT] vcf2cytosure Path to CGH file to allow download per individual tumor_type Type of tumor tissue_type What tissue the sample originates from tmb Tumor mutational burden msi Microsatellite instability tumor_purity Purity of tumor sample vcf_snv path to snv vcf file vcf_sv vcf_snv_research path to vcf file with all variants vcf_sv_research vcf_cancer vcf_cancer_research madeline path to a madeline pedigree file in xml format peddy_ped path to a peddy ped file with an analysis of the pedigree based on variant information peddy_ped_check path to a peddy ped check file peddy_sex_check path to a peddy ped check file multiqc path to a multiqc report with arbitrary information default_gene_panels list of default gene panels. Variants from the genes in the gene panels specified will be shown when opening the case in scout gene_panels list of gene panels. This will specify what panels the case has been run with rank model version which rank model that was used when scoring the variants SV rank model version the SV rank model version used when scoring SV variants rank_score_treshold only include variants with a rank score above this treshold analysis_date time for analysis in datetime format. Defaults to time of uploading human_genome_build what genome version was used. Minimal config Here is an example of a minimal load config: --- owner: cust004 family: '1' samples: - analysis_type: wes sample_id: NA12878 capture_kit: Agilent_SureSelectCRE.V1 father: 0 mother: 0 sample_name: NA12878 phenotype: affected sex: male expected_coverage: 30 vcf_snv: scout/demo/643594.clinical.vcf.gz CGH (vcf2cytosure) for download By giving a path to each individual vcf2cytosure-file these are made available for download on the case page. Such SV files can be visualized using standard arrayCGH analysis tools. See vcf2cytosure .","title":"Load config"},{"location":"admin-guide/load-config/#the-load-config","text":"Scout have the possibility to store loads of information about a case and the samples that are included. It is cumbersome to specify to many parameters on the command line so there is an option to give this information in a yaml formated config file. Here we can give scout some meta information about the analysis, how it was performed, information about family, samples etc. The basic structure of a load config looks like: owner: str(mandatory) family: str(mandatory) samples: - analysis_type: str(optional), [wgs,wes,panel,external] sample_id: str(mandatory) capture_kit: str(optional) father: str(mandatory) mother: str(mandatory) sample_name: str(mandatory) phenotype: str(mandatory), [affected, unaffected, unknown] sex: str(mandatory), [male, female, unknown] expected_coverage: int(mandatory) vcf2cytosure: str(optional) # path to CGH file bam_path: str(optional) # path to bam file rhocall_bed: str(optional) # path to bed file rhocall_wig: str(optional) # path to wig file upd_regions_bed: str(optional) # path to bed file upd_sites_bed: str(optional) # path to bed file tiddit_coverage_wig: str(optional) # path to wig file tissue_type: str(optional) tumor_type: str(optional) tmb: str(optional) # Tumor mutational burder [0,1000] msi: str(optional) # Microsatellite instability [0,60] tumor_purity: float # [0.1,1] vcf_snv: str(optional) vcf_sv: str(optional) vcf_cancer: str(optional) vcf_snv_research: str(optional) vcf_sv_research: str(optional) vcf_cancer_research: str(optional) madeline: str(optional) peddy_ped: str(optional) peddy_ped_check: str(optional) peddy_sex_check: str(optional) multiqc: str(optional) default_gene_panels: list[str](optional) gene_panels: list[str](optional) # ATM rare or cancer track: list[str][optional] # meta data rank_model_version: str(optional) sv_rank_model_version: str(optional) rank_score_threshold: float(optional) analysis_date: datetime(optional) human_genome_build: str(optional) Let's go through each field: owner each case has to have a owner, this refers to an existing institute in the scout instance family each case has to have a family id samples list of samples included in the case analysis_type specifies the analysis type for the sample samlple_id identifyer for a sample capture_kit for exome specifies the capture kit father sample id for father or 0 mother sample id for mother or 0 phenotype specifies the affection status of the sample in human readable format sex specifies the sex of the sample in human readable format expected_coverage the level of expected coverage bam_file Path to bam file to view alignments rhocall_bed Path to bed file to view alignments (Reference)[https://github.com/dnil/rhocall] rhocall_wig Path to wig file to view alignments (Reference)[https://github.com/dnil/rhocall] upd_regions_bed Path to bed file to view alignments (Reference)[https://github.com/bjhall/upd] upd_sites_bed Path to bed file to view alignments (Reference)[https://github.com/bjhall/upd] tiddit_coverage_wig Path to wig file to view alignments (Reference)[https://github.com/SciLifeLab/TIDDIT] vcf2cytosure Path to CGH file to allow download per individual tumor_type Type of tumor tissue_type What tissue the sample originates from tmb Tumor mutational burden msi Microsatellite instability tumor_purity Purity of tumor sample vcf_snv path to snv vcf file vcf_sv vcf_snv_research path to vcf file with all variants vcf_sv_research vcf_cancer vcf_cancer_research madeline path to a madeline pedigree file in xml format peddy_ped path to a peddy ped file with an analysis of the pedigree based on variant information peddy_ped_check path to a peddy ped check file peddy_sex_check path to a peddy ped check file multiqc path to a multiqc report with arbitrary information default_gene_panels list of default gene panels. Variants from the genes in the gene panels specified will be shown when opening the case in scout gene_panels list of gene panels. This will specify what panels the case has been run with rank model version which rank model that was used when scoring the variants SV rank model version the SV rank model version used when scoring SV variants rank_score_treshold only include variants with a rank score above this treshold analysis_date time for analysis in datetime format. Defaults to time of uploading human_genome_build what genome version was used.","title":"The load config"},{"location":"admin-guide/load-config/#minimal-config","text":"Here is an example of a minimal load config: --- owner: cust004 family: '1' samples: - analysis_type: wes sample_id: NA12878 capture_kit: Agilent_SureSelectCRE.V1 father: 0 mother: 0 sample_name: NA12878 phenotype: affected sex: male expected_coverage: 30 vcf_snv: scout/demo/643594.clinical.vcf.gz","title":"Minimal config"},{"location":"admin-guide/load-config/#cgh-vcf2cytosure-for-download","text":"By giving a path to each individual vcf2cytosure-file these are made available for download on the case page. Such SV files can be visualized using standard arrayCGH analysis tools. See vcf2cytosure .","title":"CGH (vcf2cytosure) for download"},{"location":"admin-guide/loading-variants/","text":"Variant loading This document will describe the process of variant loading, how it is done and why. Rank Score In Scout rank score is a central theme. Rank Scores is a estimation on how potentially dangerous a variant is, similar to the CADD score with the intention of work with all types of variation. The uploading of variants is based on a rank score threshold, this is to avoid to clog the database with millions of variants that we at the moment have a hard time to say anything about. The rank score is a summary of the annotations of a variant. Rank scores are calculated and annotated by GENMOD","title":"Variant loading"},{"location":"admin-guide/loading-variants/#variant-loading","text":"This document will describe the process of variant loading, how it is done and why.","title":"Variant loading"},{"location":"admin-guide/loading-variants/#rank-score","text":"In Scout rank score is a central theme. Rank Scores is a estimation on how potentially dangerous a variant is, similar to the CADD score with the intention of work with all types of variation. The uploading of variants is based on a rank score threshold, this is to avoid to clog the database with millions of variants that we at the moment have a hard time to say anything about. The rank score is a summary of the annotations of a variant. Rank scores are calculated and annotated by GENMOD","title":"Rank Score"},{"location":"admin-guide/loading/","text":"Loading Scout Institute To load a institute into scout use the command scout load institute . As mentioned in the user guide an institute has to have a unique internal id, this is specified on the command line with -i/--internal-id . Also a display name could be used if there is a need for that, specify with -d/--display-name . If no display name is choosen it will default to internal id. Note that internal id is unique. User To load a user into scout use the command scout load user . A user has to: belong to an institute have a name have a email adress An example could look like: scout load user --institute-id cust000 --user-name \"Clark Kent\" --user-mail clark@mail.com Case When loading a case into scout it is possible to use either a config file or to specify parameters on the command line. Scout Load Config The loading config is a .yaml file and can include all the necessary information to scout. Command line options will overload information in the config file. For a complete spec of the config file see load config An example file, (this file is located in scout/demo/643594.config.yaml ): --- owner: cust000 family: '643594' samples: - analysis_type: wes sample_id: ADM1059A2 capture_kit: Agilent_SureSelectCRE.V1 father: ADM1059A1 mother: ADM1059A3 sample_name: NA12882 phenotype: affected sex: male bam_path: path/to/bam expected_coverage: 30 - analysis_type: wes sample_id: ADM1059A1 capture_kit: Agilent_SureSelectCRE.V1 father: '0' mother: '0' sample_name: NA12877 phenotype: unaffected sex: male bam_path: path/to/bam expected_coverage: 30 - analysis_type: wes sample_id: ADM1059A3 capture_kit: Agilent_SureSelectCRE.V1 father: '0' mother: '0' sample_name: NA12878 phenotype: unaffected sex: female bam_path: path/to/bam expected_coverage: 30 vcf_snv: scout/demo/643594.clinical.vcf.gz vcf_sv: scout/demo/643594.clinical.SV.vcf.gz vcf_snv_research: scout/demo/643594.research.vcf.gz vcf_sv_research: scout/demo/643594.research.SV.vcf.gz madeline: scout/demo/madeline.xml default_gene_panels: [panel1] gene_panels: [panel1] # meta data rank_model_version: '1.12' sv_rank_model_version: '1.5' rank_score_threshold: -100 analysis_date: 2016-10-12 14:00:46 human_genome_build: 37 Load case from CLI without config Cases can be loaded without config file, in that case the user needs to specify a ped file and optionally one or several VCF files. An example could look like scout load case --ped path/to/file.ped --vcf-snv path/to/file.vcf Please use scout load case --help for more instructions","title":"Loading"},{"location":"admin-guide/loading/#loading-scout","text":"","title":"Loading Scout"},{"location":"admin-guide/loading/#institute","text":"To load a institute into scout use the command scout load institute . As mentioned in the user guide an institute has to have a unique internal id, this is specified on the command line with -i/--internal-id . Also a display name could be used if there is a need for that, specify with -d/--display-name . If no display name is choosen it will default to internal id. Note that internal id is unique.","title":"Institute"},{"location":"admin-guide/loading/#user","text":"To load a user into scout use the command scout load user . A user has to: belong to an institute have a name have a email adress An example could look like: scout load user --institute-id cust000 --user-name \"Clark Kent\" --user-mail clark@mail.com","title":"User"},{"location":"admin-guide/loading/#case","text":"When loading a case into scout it is possible to use either a config file or to specify parameters on the command line.","title":"Case"},{"location":"admin-guide/loading/#scout-load-config","text":"The loading config is a .yaml file and can include all the necessary information to scout. Command line options will overload information in the config file. For a complete spec of the config file see load config An example file, (this file is located in scout/demo/643594.config.yaml ): --- owner: cust000 family: '643594' samples: - analysis_type: wes sample_id: ADM1059A2 capture_kit: Agilent_SureSelectCRE.V1 father: ADM1059A1 mother: ADM1059A3 sample_name: NA12882 phenotype: affected sex: male bam_path: path/to/bam expected_coverage: 30 - analysis_type: wes sample_id: ADM1059A1 capture_kit: Agilent_SureSelectCRE.V1 father: '0' mother: '0' sample_name: NA12877 phenotype: unaffected sex: male bam_path: path/to/bam expected_coverage: 30 - analysis_type: wes sample_id: ADM1059A3 capture_kit: Agilent_SureSelectCRE.V1 father: '0' mother: '0' sample_name: NA12878 phenotype: unaffected sex: female bam_path: path/to/bam expected_coverage: 30 vcf_snv: scout/demo/643594.clinical.vcf.gz vcf_sv: scout/demo/643594.clinical.SV.vcf.gz vcf_snv_research: scout/demo/643594.research.vcf.gz vcf_sv_research: scout/demo/643594.research.SV.vcf.gz madeline: scout/demo/madeline.xml default_gene_panels: [panel1] gene_panels: [panel1] # meta data rank_model_version: '1.12' sv_rank_model_version: '1.5' rank_score_threshold: -100 analysis_date: 2016-10-12 14:00:46 human_genome_build: 37","title":"Scout Load Config"},{"location":"admin-guide/loading/#load-case-from-cli-without-config","text":"Cases can be loaded without config file, in that case the user needs to specify a ped file and optionally one or several VCF files. An example could look like scout load case --ped path/to/file.ped --vcf-snv path/to/file.vcf Please use scout load case --help for more instructions","title":"Load case from CLI without config"},{"location":"admin-guide/login-system/","text":"Setting up a user login system Scout currently supports 3 types of login systems: - Google authentication via OpenID Connect - [LDAP authentication](##Login-using-Lightweight-Directory-Access-Protocol-(LDAP) - Simple authentication using userid and password Login systems are mutually exclusive so when you choose a system, it will become be the only way all users will have access to the Scout app. Google OpenID Connect login system Scout supports Google account login via OpenID Connect. Before setting up the Google authentication system in Scout it is necessary to register the Scout application in the Google API console and obtain OAuth 2.0 credentials. A detailed guide on how to do this is available at this link . In brief: Create credentials for your demo app: Go to this page: https://console.developers.google.com/apis/credentials?project=my-project-1507807614573&folder=&organizationId= Click on credentials and choose the second option: OAuth Client ID Fill in this page with the following info: name: A name for your app Authorized JavaScript origins: https://your-scout-implementation-url:port Authorized redirect URIs: http://your-scout-implementation-url:port/authorized Save these settings by clicking on the \"Save\" button Note that a client_id and a client_secret are generated. Edit the scout config file adding the following lines: GOOGLE = dict( client_id=\"client_id\", client_secret=\"client_secret\", discovery_url=\"https://accounts.google.com/.well-known/openid-configuration\" ) Make sure that all users that should be allowed to log in in the app are already present in the Scout database with an id corresponding to a valid google email address. The following command can be used to add a create a new user into the database: scout load user -i institute-id -u \"User Name\" -m user_emaill@email.com Login using Lightweight Directory Access Protocol (LDAP) Institutional directory services authentication via LDAP is supported by Scout. To enable LDAP authentication, add and customize the following lines in the config file: # LDAP connection settings LDAP_PORT = ldap-port (usually 389) LDAP_HOST = 'ldap-host' LDAP_BASE_DN = 'dc=example,dc=com' LDAP_BIND_USER_DN = 'cn=read-only-admin,dc=example,dc=com' LDAP_REQUIRED_GROUP = 'ou=scientists,dc=example,dc=com' LDAP_USER_SEARCH_SCOPE = 'SUBTREE', LDAP_GROUP_OBJECT_FILTER = '(objectClass=GroupOfUniqueNames)' Make sure that all users that should be allowed to log in in the app are already present in the Scout database with an ID corresponding to a valid LDAP. The following command can be used to add a create a new user into the database: scout load user -id ldap_id -i cust000 -u \"User Name\" -m useremail@email.com Please note that the while the -id ldap_id option is not a mandatory parameter in the command used for adding users to the database, it is necessary for the LDAP login to successfully recognize the user in the system. Simple login with userid and password Basic login with userid and password is the login system available whenever no advanced login system (either Google or LDAP) is specified in the Scout config file. It is an un-secure system which is not recommended to use. This is also the login system available in the demo instance of Scout.","title":"Setting up a user login system"},{"location":"admin-guide/login-system/#setting-up-a-user-login-system","text":"Scout currently supports 3 types of login systems: - Google authentication via OpenID Connect - [LDAP authentication](##Login-using-Lightweight-Directory-Access-Protocol-(LDAP) - Simple authentication using userid and password Login systems are mutually exclusive so when you choose a system, it will become be the only way all users will have access to the Scout app.","title":"Setting up a user login system"},{"location":"admin-guide/login-system/#google-openid-connect-login-system","text":"Scout supports Google account login via OpenID Connect. Before setting up the Google authentication system in Scout it is necessary to register the Scout application in the Google API console and obtain OAuth 2.0 credentials. A detailed guide on how to do this is available at this link . In brief:","title":"Google OpenID Connect login system"},{"location":"admin-guide/login-system/#create-credentials-for-your-demo-app","text":"Go to this page: https://console.developers.google.com/apis/credentials?project=my-project-1507807614573&folder=&organizationId= Click on credentials and choose the second option: OAuth Client ID Fill in this page with the following info: name: A name for your app Authorized JavaScript origins: https://your-scout-implementation-url:port Authorized redirect URIs: http://your-scout-implementation-url:port/authorized Save these settings by clicking on the \"Save\" button Note that a client_id and a client_secret are generated.","title":"Create credentials for your demo app:"},{"location":"admin-guide/login-system/#edit-the-scout-config-file-adding-the-following-lines","text":"GOOGLE = dict( client_id=\"client_id\", client_secret=\"client_secret\", discovery_url=\"https://accounts.google.com/.well-known/openid-configuration\" ) Make sure that all users that should be allowed to log in in the app are already present in the Scout database with an id corresponding to a valid google email address. The following command can be used to add a create a new user into the database: scout load user -i institute-id -u \"User Name\" -m user_emaill@email.com","title":"Edit the scout config file adding the following lines:"},{"location":"admin-guide/login-system/#login-using-lightweight-directory-access-protocol-ldap","text":"Institutional directory services authentication via LDAP is supported by Scout. To enable LDAP authentication, add and customize the following lines in the config file: # LDAP connection settings LDAP_PORT = ldap-port (usually 389) LDAP_HOST = 'ldap-host' LDAP_BASE_DN = 'dc=example,dc=com' LDAP_BIND_USER_DN = 'cn=read-only-admin,dc=example,dc=com' LDAP_REQUIRED_GROUP = 'ou=scientists,dc=example,dc=com' LDAP_USER_SEARCH_SCOPE = 'SUBTREE', LDAP_GROUP_OBJECT_FILTER = '(objectClass=GroupOfUniqueNames)' Make sure that all users that should be allowed to log in in the app are already present in the Scout database with an ID corresponding to a valid LDAP. The following command can be used to add a create a new user into the database: scout load user -id ldap_id -i cust000 -u \"User Name\" -m useremail@email.com Please note that the while the -id ldap_id option is not a mandatory parameter in the command used for adding users to the database, it is necessary for the LDAP login to successfully recognize the user in the system.","title":"Login using Lightweight Directory Access Protocol (LDAP)"},{"location":"admin-guide/login-system/#simple-login-with-userid-and-password","text":"Basic login with userid and password is the login system available whenever no advanced login system (either Google or LDAP) is specified in the Scout config file. It is an un-secure system which is not recommended to use. This is also the login system available in the demo instance of Scout.","title":"Simple login with userid and password"},{"location":"admin-guide/loqusdb_integration/","text":"Loqusdb integration Loqusdb is a tool to keep track of local observation of genomic variants. Local frequencies/observations has been shown to add value to the analysis of genomic data both for rare disease and cancer. Scout integrates with loqusdb by fetching data from a given instance of loqusdb via the CLI. Please note that loqusdb version >= 2.5 needs to be installed. Setup To avoid dependency conflicts loqusdb should be installed in an environment separate from scout. Install loqudb according to the instructions on the package homepage. This can be done using the same environment or another virtual environment, also the same mongodb process can be used for the loqus database however if large datasets(1000s of whole genomes) are expected it is preferable to keep these separate. In the config config.py give the connection information like: #connection details for LoqusDB MongoDB database LOQUSDB_SETTINGS = dict( binary_path='/path/to/bin/loqusdb', config_path=<path/to/loqus/config> ) where the binary_path is mandatory and config_path is alternative if not connecting to the default (which is port=27017 , host=localhost ) Now scout will display if the variant has been seen in other cases and also will link to these if they exists in the same scout instance. Result Whenever a user clicks on a variant scout will query loqusdb for that variant and display the information given if the loqusdb settings are used as above. There will also be links to the other accessable cases where the variant can be found. A maximum of 10 cases will be displayed, however the total number of observations will be visible in numbers.","title":"Loqusdb integration"},{"location":"admin-guide/loqusdb_integration/#loqusdb-integration","text":"Loqusdb is a tool to keep track of local observation of genomic variants. Local frequencies/observations has been shown to add value to the analysis of genomic data both for rare disease and cancer. Scout integrates with loqusdb by fetching data from a given instance of loqusdb via the CLI. Please note that loqusdb version >= 2.5 needs to be installed.","title":"Loqusdb integration"},{"location":"admin-guide/loqusdb_integration/#setup","text":"To avoid dependency conflicts loqusdb should be installed in an environment separate from scout. Install loqudb according to the instructions on the package homepage. This can be done using the same environment or another virtual environment, also the same mongodb process can be used for the loqus database however if large datasets(1000s of whole genomes) are expected it is preferable to keep these separate. In the config config.py give the connection information like: #connection details for LoqusDB MongoDB database LOQUSDB_SETTINGS = dict( binary_path='/path/to/bin/loqusdb', config_path=<path/to/loqus/config> ) where the binary_path is mandatory and config_path is alternative if not connecting to the default (which is port=27017 , host=localhost ) Now scout will display if the variant has been seen in other cases and also will link to these if they exists in the same scout instance.","title":"Setup"},{"location":"admin-guide/loqusdb_integration/#result","text":"Whenever a user clicks on a variant scout will query loqusdb for that variant and display the information given if the loqusdb settings are used as above. There will also be links to the other accessable cases where the variant can be found. A maximum of 10 cases will be displayed, however the total number of observations will be visible in numbers.","title":"Result"},{"location":"admin-guide/matchmaker_exchange_integration/","text":"MatchMaker Exchange integration Starting from Scout release 4.4 the software can be configured to send patient data to a MatchMaker Exchange server. A MatchMaker server that is tested and known to work with Scout is patientMatcher , but any server which implements the standard endpoints described in the MME APIs can in theory be connected as well. It is worth mentioning that when using a MME server different than patientMatcher you will be able to export patient data to to MatchMaker, but it is not guaranteed that you will be able to modify the submission at a later stage or view matching results into Scout. Basic configuration for MME integration Edit scout config file adding the following parameters: MME_ACCEPTS = 'application/vnd.ga4gh.matchmaker.v1.0+json' MME_URL = 'base_url_of_MME_service' MME_TOKEN = 'security_token_accepted_by_MME' Note that in order to accept and process Scout requests there should be already a registered client in the MME server database with the same security token that Scout is going to provide when creating requests. Parameter MME_ACCEPTS is specific for patientMatcher integration and should probably be modified according to the MME server being used. Modifying user roles to include MatchMaker Exchange submitter privilege You can grant users the privilege to add patients to MatchMaker and review eventual matches by adding a MME submitter role to the user object. To do so, run the following command: scout update user -r mme_submitter -u scout_user_id a mme_submitter role will be added in this way to the list of roles of the user object in database.","title":"Matchmaker exchange integration"},{"location":"admin-guide/matchmaker_exchange_integration/#matchmaker-exchange-integration","text":"Starting from Scout release 4.4 the software can be configured to send patient data to a MatchMaker Exchange server. A MatchMaker server that is tested and known to work with Scout is patientMatcher , but any server which implements the standard endpoints described in the MME APIs can in theory be connected as well. It is worth mentioning that when using a MME server different than patientMatcher you will be able to export patient data to to MatchMaker, but it is not guaranteed that you will be able to modify the submission at a later stage or view matching results into Scout.","title":"MatchMaker Exchange integration"},{"location":"admin-guide/matchmaker_exchange_integration/#basic-configuration-for-mme-integration","text":"Edit scout config file adding the following parameters: MME_ACCEPTS = 'application/vnd.ga4gh.matchmaker.v1.0+json' MME_URL = 'base_url_of_MME_service' MME_TOKEN = 'security_token_accepted_by_MME' Note that in order to accept and process Scout requests there should be already a registered client in the MME server database with the same security token that Scout is going to provide when creating requests. Parameter MME_ACCEPTS is specific for patientMatcher integration and should probably be modified according to the MME server being used.","title":"Basic configuration for MME integration"},{"location":"admin-guide/matchmaker_exchange_integration/#modifying-user-roles-to-include-matchmaker-exchange-submitter-privilege","text":"You can grant users the privilege to add patients to MatchMaker and review eventual matches by adding a MME submitter role to the user object. To do so, run the following command: scout update user -r mme_submitter -u scout_user_id a mme_submitter role will be added in this way to the list of roles of the user object in database.","title":"Modifying user roles to include MatchMaker Exchange submitter privilege"},{"location":"admin-guide/scripts/","text":"Scripts folder genelist_to_panel.py Used to print to terminal a gene panel based on a gene list. transfer-archive.py Used to migrate case info from an old archive to a newer one. update_files_path.py Used to change all paths in the database when moving cases's file from one server to another. The scripts checks if cases contain file paths pointing to location in the old server ( --test option) and updates these paths to new paths on the new machine. Usage: bash python --db_uri mongodb_connection_uri -o /old/path/to/files -n /new/path/to/files options: --test : Use this flag to test the function -d: Use this flag to create a list of keys where old path is found update_variant_panels.py Update variant panels.","title":"Scripts folder"},{"location":"admin-guide/scripts/#scripts-folder","text":"","title":"Scripts folder"},{"location":"admin-guide/scripts/#genelist_to_panelpy","text":"Used to print to terminal a gene panel based on a gene list.","title":"genelist_to_panel.py"},{"location":"admin-guide/scripts/#transfer-archivepy","text":"Used to migrate case info from an old archive to a newer one.","title":"transfer-archive.py"},{"location":"admin-guide/scripts/#update_files_pathpy","text":"Used to change all paths in the database when moving cases's file from one server to another. The scripts checks if cases contain file paths pointing to location in the old server ( --test option) and updates these paths to new paths on the new machine. Usage: bash python --db_uri mongodb_connection_uri -o /old/path/to/files -n /new/path/to/files options: --test : Use this flag to test the function -d: Use this flag to create a list of keys where old path is found","title":"update_files_path.py"},{"location":"admin-guide/scripts/#update_variant_panelspy","text":"Update variant panels.","title":"update_variant_panels.py"},{"location":"admin-guide/server/","text":"Running the server This document will explain how we like to run Scout in both development and production settings. Config The server has it's own config file, separate from the command line tool. It's written in Python for full expressivity. These are the settings you can use: # flask.conf.py # to encrypt cookie data SECRET_KEY = 'makeThisSomethingNonGuessable' # required # connection details for MongoDB MONGO_DBNAME = 'scout' # required MONGO_PORT = 27017 MONGO_USERNAME = 'mongoUser' MONGO_PASSWORD = 'mongoUserPassword' # connection string for Chanjo coverage database SQLALCHEMY_DATABASE_URI = 'mysql://chanjo:CHANJO_PASSWORD@localhost:3306/chanjo' # connection details for LoqusDB MongoDB database LOQUSDB_SETTINGS = dict( database='loqusdb', uri=(\"mongodb://{}:{}@localhost:{}/loqusdb\" .format(MONGO_USERNAME, MONGO_PASSWORD, MONGO_PORT)), ) # default chanjo coverage report language: 'sv' or 'en' REPORT_LANGUAGE = 'sv' # Google email account to user for sending emails MAIL_USERNAME = 'paul.anderson@gmail.com' MAIL_PASSWORD = 'mySecretPassw0rd' TICKET_SYSTEM_EMAIL = 'support@sekvens.nu' # emails to send error log message to ADMINS = ['robin.andeer@scilifelab.se'] # enable Google OAuth-based login GOOGLE = dict( consumer_key='CLIENT_ID.apps.googleusercontent.com', consumer_secret='CLIENT_SECRET', # Prepend to all (non-absolute) request URLs base_url='https://www.googleapis.com/oauth2/v1/', authorize_url='https://accounts.google.com/o/oauth2/auth', request_token_url=None, request_token_params={ 'scope': (\"https://www.googleapis.com/auth/userinfo.profile \" \"https://www.googleapis.com/auth/userinfo.email\"), }, access_token_url='https://accounts.google.com/o/oauth2/token', access_token_method='POST' ) # enable the phenomizer service which links HPO phenotype terms to diseases/genes PHENOMIZER_USERNAME = 'phenoUser' PHENOMIZER_PASSWORD = 'phenoPassword' Development Flask includes a decent server which works great for development. After you install Scout you can start the server with some relevant settings: # this line will help Flask find the server FLASK_APP=scout.server.auto \\ # this will enable debug mode of Flask and reload the server on code changes FLASK_DEBUG=1 \\ # this is a Scout specific variable that should point to the server config SCOUT_CONFIG=\"/full/path/to/flask.conf.py\" \\ flask run The server can also be started from the scout cli with the command scout serve . There are multiple options here. To use a alternative flask config pass the path with option -f/ --flask_config like scout -f path/to/flask.conf.py serve . Production Now the built-in Flask server won't cut it anymore. We are a fan of using Gunicorn for running Python services. It's easy to setup and configure and handles things like multi-processing and SSL/HTTPS without problems. You can setup the server accordingly: SCOUT_CONFIG=\"/full/path/to/flask.conf.py\" \\ gunicorn \\ --workers=4 \\ --bind=\"HOST:PORT\" \\ --keyfile=\"/path/to/myserver.key\" \\ --certfile=\"/path/to/server.crt\" \\ scout.server.auto:app","title":"Server"},{"location":"admin-guide/server/#running-the-server","text":"This document will explain how we like to run Scout in both development and production settings.","title":"Running the server"},{"location":"admin-guide/server/#config","text":"The server has it's own config file, separate from the command line tool. It's written in Python for full expressivity. These are the settings you can use: # flask.conf.py # to encrypt cookie data SECRET_KEY = 'makeThisSomethingNonGuessable' # required # connection details for MongoDB MONGO_DBNAME = 'scout' # required MONGO_PORT = 27017 MONGO_USERNAME = 'mongoUser' MONGO_PASSWORD = 'mongoUserPassword' # connection string for Chanjo coverage database SQLALCHEMY_DATABASE_URI = 'mysql://chanjo:CHANJO_PASSWORD@localhost:3306/chanjo' # connection details for LoqusDB MongoDB database LOQUSDB_SETTINGS = dict( database='loqusdb', uri=(\"mongodb://{}:{}@localhost:{}/loqusdb\" .format(MONGO_USERNAME, MONGO_PASSWORD, MONGO_PORT)), ) # default chanjo coverage report language: 'sv' or 'en' REPORT_LANGUAGE = 'sv' # Google email account to user for sending emails MAIL_USERNAME = 'paul.anderson@gmail.com' MAIL_PASSWORD = 'mySecretPassw0rd' TICKET_SYSTEM_EMAIL = 'support@sekvens.nu' # emails to send error log message to ADMINS = ['robin.andeer@scilifelab.se'] # enable Google OAuth-based login GOOGLE = dict( consumer_key='CLIENT_ID.apps.googleusercontent.com', consumer_secret='CLIENT_SECRET', # Prepend to all (non-absolute) request URLs base_url='https://www.googleapis.com/oauth2/v1/', authorize_url='https://accounts.google.com/o/oauth2/auth', request_token_url=None, request_token_params={ 'scope': (\"https://www.googleapis.com/auth/userinfo.profile \" \"https://www.googleapis.com/auth/userinfo.email\"), }, access_token_url='https://accounts.google.com/o/oauth2/token', access_token_method='POST' ) # enable the phenomizer service which links HPO phenotype terms to diseases/genes PHENOMIZER_USERNAME = 'phenoUser' PHENOMIZER_PASSWORD = 'phenoPassword'","title":"Config"},{"location":"admin-guide/server/#development","text":"Flask includes a decent server which works great for development. After you install Scout you can start the server with some relevant settings: # this line will help Flask find the server FLASK_APP=scout.server.auto \\ # this will enable debug mode of Flask and reload the server on code changes FLASK_DEBUG=1 \\ # this is a Scout specific variable that should point to the server config SCOUT_CONFIG=\"/full/path/to/flask.conf.py\" \\ flask run The server can also be started from the scout cli with the command scout serve . There are multiple options here. To use a alternative flask config pass the path with option -f/ --flask_config like scout -f path/to/flask.conf.py serve .","title":"Development"},{"location":"admin-guide/server/#production","text":"Now the built-in Flask server won't cut it anymore. We are a fan of using Gunicorn for running Python services. It's easy to setup and configure and handles things like multi-processing and SSL/HTTPS without problems. You can setup the server accordingly: SCOUT_CONFIG=\"/full/path/to/flask.conf.py\" \\ gunicorn \\ --workers=4 \\ --bind=\"HOST:PORT\" \\ --keyfile=\"/path/to/myserver.key\" \\ --certfile=\"/path/to/server.crt\" \\ scout.server.auto:app","title":"Production"},{"location":"admin-guide/setup-scout/","text":"Setup Scout Demo Once installed, you can setup Scout by running a few commands using the included command line interface. Given you have a MongoDB server listening on the default port (27017), this is how you would setup a fully working Scout demo: scout setup demo This will setup an instance of scout with a database called scout-demo . Now run scout --demo serve And play around with the interface. A user has been created with email clark.kent@mail.com so use that adress to get access Initialize scout To initialize a working instance with all genes, diseases etc run scout setup database for more info, run scout --help Setting up users login Scout login system currently supports 1. Google login via OpenID Connect. Click here for instructions on how to set up a Google login system 1. Connection via Lightweight Directory Access Protocol (LPAD). Click [here](./login-system.md/##Login-using-Lightweight-Directory-Access-Protocol-(LDAP) for instructions on how to set up a LDAP login system","title":"Setup"},{"location":"admin-guide/setup-scout/#setup-scout","text":"","title":"Setup Scout"},{"location":"admin-guide/setup-scout/#demo","text":"Once installed, you can setup Scout by running a few commands using the included command line interface. Given you have a MongoDB server listening on the default port (27017), this is how you would setup a fully working Scout demo: scout setup demo This will setup an instance of scout with a database called scout-demo . Now run scout --demo serve And play around with the interface. A user has been created with email clark.kent@mail.com so use that adress to get access","title":"Demo"},{"location":"admin-guide/setup-scout/#initialize-scout","text":"To initialize a working instance with all genes, diseases etc run scout setup database for more info, run scout --help","title":"Initialize scout"},{"location":"admin-guide/setup-scout/#setting-up-users-login","text":"Scout login system currently supports 1. Google login via OpenID Connect. Click here for instructions on how to set up a Google login system 1. Connection via Lightweight Directory Access Protocol (LPAD). Click [here](./login-system.md/##Login-using-Lightweight-Directory-Access-Protocol-(LDAP) for instructions on how to set up a LDAP login system","title":"Setting up users login"},{"location":"admin-guide/display-data/cases/","text":"Display Cases from the database Use CLI scout view cases","title":"Cases"},{"location":"admin-guide/display-data/cases/#display-cases-from-the-database","text":"Use CLI scout view cases","title":"Display Cases from the database"},{"location":"admin-guide/reference-sets/genes_transcripts/","text":"Downloading resources to build reference sets For all of the ensembl downloads we choose filters chr 1-22, X, Y, MT and only genes with hgnc identifier Ensembl genes We collect coordinate infromation about genes from ensembl. There are two gene files, one for each build in scout/resources these are named ensembl_genes_37.tsv.gz and ensembl_genes_38.tsv.gz . If for any reason an admin want to replace/update these files they are collected from ensembl BIOMART with the following choices made: Chromosome/scaffold name Gene stable ID Chromosome/scaffold name Gene start (bp) Gene end (bp) from EXTERNAL: HGNC ID The link between different resources are made via HGNC id which is the most stable gene identifier Ensembl transcripts Same as above, we collect information about coordinates and refseq from ensembl. There are two files here as well: ensembl_transcripts_37.tsv.gz and ensembl_transcripts_38.tsv.gz . Those are collected by choosing the following information: Chromosome/scaffold name Gene stable ID Transcript stable ID Transcript start (bp) Transcript end (bp) from EXTERNAL: RefSeq mRNA ID RefSeq mRNA predicted ID RefSeq ncRNA ID Ensembl exons Choose attributes then structures . Under GENE choose: Chromosome/scaffold name Gene stable ID Transcript stable ID Strand 5' UTR start 5' UTR end 3' UTR start 3' UTR end Under EXON choose: Exon region start (bp) Exon region start (bp) Exon rank in transcript Under FILTERS / Gene choose Limit to genes with HGNC Symbol ID(s) click results and then download Ensembl genes and transcripts Choose attributes then structures . Under GENE choose: Chromosome/scaffold name Gene stable ID Transcript stable ID Gene start (bp) Gene end (bp) Transcript start (bp) Transcript end (bp) Gene name Under EXTERNAL the External References choose: RefSeq mRNA ID RefSeq mRNA predicted ID RefSeq ncRNA ID Under FILTERS / Gene choose Limit to genes with HGNC Symbol ID(s) click results and then download","title":"Downloading resources to build reference sets"},{"location":"admin-guide/reference-sets/genes_transcripts/#downloading-resources-to-build-reference-sets","text":"For all of the ensembl downloads we choose filters chr 1-22, X, Y, MT and only genes with hgnc identifier","title":"Downloading resources to build reference sets"},{"location":"admin-guide/reference-sets/genes_transcripts/#ensembl-genes","text":"We collect coordinate infromation about genes from ensembl. There are two gene files, one for each build in scout/resources these are named ensembl_genes_37.tsv.gz and ensembl_genes_38.tsv.gz . If for any reason an admin want to replace/update these files they are collected from ensembl BIOMART with the following choices made: Chromosome/scaffold name Gene stable ID Chromosome/scaffold name Gene start (bp) Gene end (bp) from EXTERNAL: HGNC ID The link between different resources are made via HGNC id which is the most stable gene identifier","title":"Ensembl genes"},{"location":"admin-guide/reference-sets/genes_transcripts/#ensembl-transcripts","text":"Same as above, we collect information about coordinates and refseq from ensembl. There are two files here as well: ensembl_transcripts_37.tsv.gz and ensembl_transcripts_38.tsv.gz . Those are collected by choosing the following information: Chromosome/scaffold name Gene stable ID Transcript stable ID Transcript start (bp) Transcript end (bp) from EXTERNAL: RefSeq mRNA ID RefSeq mRNA predicted ID RefSeq ncRNA ID","title":"Ensembl transcripts"},{"location":"admin-guide/reference-sets/genes_transcripts/#ensembl-exons","text":"Choose attributes then structures . Under GENE choose: Chromosome/scaffold name Gene stable ID Transcript stable ID Strand 5' UTR start 5' UTR end 3' UTR start 3' UTR end Under EXON choose: Exon region start (bp) Exon region start (bp) Exon rank in transcript Under FILTERS / Gene choose Limit to genes with HGNC Symbol ID(s) click results and then download","title":"Ensembl exons"},{"location":"admin-guide/reference-sets/genes_transcripts/#ensembl-genes-and-transcripts","text":"Choose attributes then structures . Under GENE choose: Chromosome/scaffold name Gene stable ID Transcript stable ID Gene start (bp) Gene end (bp) Transcript start (bp) Transcript end (bp) Gene name Under EXTERNAL the External References choose: RefSeq mRNA ID RefSeq mRNA predicted ID RefSeq ncRNA ID Under FILTERS / Gene choose Limit to genes with HGNC Symbol ID(s) click results and then download","title":"Ensembl genes and transcripts"},{"location":"blog/","text":"The Scout blog","title":"Intro"},{"location":"blog/#the-scout-blog","text":"","title":"The Scout blog"},{"location":"blog/new-3.0/","text":"What's new in 3.0? Posted: 11 April 2017 This updates includes a lot of optimizations to improve performance. We've made significant efforts to make sure the way we store information in the database will scale up with additional features in the future. Here are the highlights: More responsive interface Loading pages in the web interface is now much faster. You will notice the case view and variants list show up almost instantly! Easy access to coverage report PDF You can now download the coverage report as a PDF directly form the case page with one click! Revamped gene panel view When accessing a gene panel you will now see the information regarding disease causing transcripts, reduced penetrance etc. related to each gene. You can also handle updated to the panels directly from this interface. Just add, remove, edit existing genes and commit your changes to automatically update the panel. Updated variant page We've made some tweaks to the variant page like moving the OMIM inheritance model to the OMIM panel, linked to each phenotype. Multiple RefSeq transcripts The HGNC based gene definitions have been updated. One key difference is that there we can now have multiple RefSeq transcripts per Ensembl transcript ID.","title":"Whats new in 3.0?"},{"location":"blog/new-3.0/#whats-new-in-30","text":"Posted: 11 April 2017 This updates includes a lot of optimizations to improve performance. We've made significant efforts to make sure the way we store information in the database will scale up with additional features in the future. Here are the highlights:","title":"What's new in 3.0?"},{"location":"blog/new-3.0/#more-responsive-interface","text":"Loading pages in the web interface is now much faster. You will notice the case view and variants list show up almost instantly!","title":"More responsive interface"},{"location":"blog/new-3.0/#easy-access-to-coverage-report-pdf","text":"You can now download the coverage report as a PDF directly form the case page with one click!","title":"Easy access to coverage report PDF"},{"location":"blog/new-3.0/#revamped-gene-panel-view","text":"When accessing a gene panel you will now see the information regarding disease causing transcripts, reduced penetrance etc. related to each gene. You can also handle updated to the panels directly from this interface. Just add, remove, edit existing genes and commit your changes to automatically update the panel.","title":"Revamped gene panel view"},{"location":"blog/new-3.0/#updated-variant-page","text":"We've made some tweaks to the variant page like moving the OMIM inheritance model to the OMIM panel, linked to each phenotype.","title":"Updated variant page"},{"location":"blog/new-3.0/#multiple-refseq-transcripts","text":"The HGNC based gene definitions have been updated. One key difference is that there we can now have multiple RefSeq transcripts per Ensembl transcript ID.","title":"Multiple RefSeq transcripts"},{"location":"blog/new-3.1/","text":"What's new in 3.1? Posted: 27 April 2017 This updates contains many bug fixes and a few new features. New feature: cohort tag We have introduced \"cohort tags\", where you can tag each case as belonging to one or several cohorts. Future release of Scout will include functionality to get statistics on selected cohorts or all cases. For instance, you will be able to get statistics on the number of samples within a cohort, how many are cases solved and which genes there were causative variants in. Or perhaps you want to know which phenotype terms are associated with a particular cohort. For now, the cohort tags are specific to CMMS, but we urge all user to supply to us their own set of tags to be used within the corresponding Scout instance. This applies to phenotype groups as well as we think this will be very useful in future to describe your cohorts clinically. New feature: pip distribution Scout is now installable via pip ! This means installing the server and CLI is as simple as running: pip install scout-browser Everything to setup the server; genes, HPO terms, OMIM information, etc. is included in the distribution. Bug fixes Compounds are now sorted on combined score The delivery report opens in a new tab A link from the variant page to the gene panel exists Cases are properly activated when variants are first viewed Fixed display of HGVS description Fixed issues with Sanger email Support for a new analysis type: TGA, Targeted Genome Analysis Fixed issue with filtering on 1000G frequency","title":"Whats new in 3.1?"},{"location":"blog/new-3.1/#whats-new-in-31","text":"Posted: 27 April 2017 This updates contains many bug fixes and a few new features.","title":"What's new in 3.1?"},{"location":"blog/new-3.1/#new-feature-cohort-tag","text":"We have introduced \"cohort tags\", where you can tag each case as belonging to one or several cohorts. Future release of Scout will include functionality to get statistics on selected cohorts or all cases. For instance, you will be able to get statistics on the number of samples within a cohort, how many are cases solved and which genes there were causative variants in. Or perhaps you want to know which phenotype terms are associated with a particular cohort. For now, the cohort tags are specific to CMMS, but we urge all user to supply to us their own set of tags to be used within the corresponding Scout instance. This applies to phenotype groups as well as we think this will be very useful in future to describe your cohorts clinically.","title":"New feature: cohort tag"},{"location":"blog/new-3.1/#new-feature-pip-distribution","text":"Scout is now installable via pip ! This means installing the server and CLI is as simple as running: pip install scout-browser Everything to setup the server; genes, HPO terms, OMIM information, etc. is included in the distribution.","title":"New feature: pip distribution"},{"location":"blog/new-3.1/#bug-fixes","text":"Compounds are now sorted on combined score The delivery report opens in a new tab A link from the variant page to the gene panel exists Cases are properly activated when variants are first viewed Fixed display of HGVS description Fixed issues with Sanger email Support for a new analysis type: TGA, Targeted Genome Analysis Fixed issue with filtering on 1000G frequency","title":"Bug fixes"},{"location":"blog/new-3.2/","text":"What's new in 3.2? Posted: 3 May 2017 New feature: Frequency links We have added several frequency resources links to the variant frequency table on the variants page. Beacon: enabled searches in the global beacon network Note : this is only outgoing queries and does not expose any variants in Scout. GnomeAD: the new version of EXAC, which includes approximately 120,000 exomes and 15,000 genomes. We will include gnomeAD in the MIP analysis and the rank model in a future update, but the gnomeAD browser is available from Scout now. SweGen: frequencies from 1000 Swedish genomes sampled from the twin registry. Created by SciLifeLab. LocusDB family link: It is now possible to see in, which other families a variant in LocusDB were detected. New feature: Upload all variants for a region or a gene We have done some work on the variant uploads for this release. This also means that we are now ready to accept requests to upload additional variants for a custom gene or a region. For now you can raise it by submitting a ticket in the ticketing system while we work out how to better integrate it in Scout. New feature: Upload new gene panel You can now upload a new gene panel directly in Scout. You will need a semi-colon ( ; ) separated file following the format: HGNC_symbol;HGNC_IDnumber;Disease_associated_transcript;Genetic_disease_model;Reduced_penetrance;Mosaicism;Clinical_db_gene_annotation ANKS6;26724;NM_173551.3;AR;;;PEDHEP XPNPEP3;28052;NM_022098.3;AR;;;PEDHEP DCDC2;18141;NM_016356.4;AR;;;PEDHEP CLDN1;2032;NM_021101.4;AR;;;PEDHEP ...","title":"Whats new in 3.2?"},{"location":"blog/new-3.2/#whats-new-in-32","text":"Posted: 3 May 2017","title":"What's new in 3.2?"},{"location":"blog/new-3.2/#new-feature-frequency-links","text":"We have added several frequency resources links to the variant frequency table on the variants page. Beacon: enabled searches in the global beacon network Note : this is only outgoing queries and does not expose any variants in Scout. GnomeAD: the new version of EXAC, which includes approximately 120,000 exomes and 15,000 genomes. We will include gnomeAD in the MIP analysis and the rank model in a future update, but the gnomeAD browser is available from Scout now. SweGen: frequencies from 1000 Swedish genomes sampled from the twin registry. Created by SciLifeLab. LocusDB family link: It is now possible to see in, which other families a variant in LocusDB were detected.","title":"New feature: Frequency links"},{"location":"blog/new-3.2/#new-feature-upload-all-variants-for-a-region-or-a-gene","text":"We have done some work on the variant uploads for this release. This also means that we are now ready to accept requests to upload additional variants for a custom gene or a region. For now you can raise it by submitting a ticket in the ticketing system while we work out how to better integrate it in Scout.","title":"New feature: Upload all variants for a region or a gene"},{"location":"blog/new-3.2/#new-feature-upload-new-gene-panel","text":"You can now upload a new gene panel directly in Scout. You will need a semi-colon ( ; ) separated file following the format: HGNC_symbol;HGNC_IDnumber;Disease_associated_transcript;Genetic_disease_model;Reduced_penetrance;Mosaicism;Clinical_db_gene_annotation ANKS6;26724;NM_173551.3;AR;;;PEDHEP XPNPEP3;28052;NM_022098.3;AR;;;PEDHEP DCDC2;18141;NM_016356.4;AR;;;PEDHEP CLDN1;2032;NM_021101.4;AR;;;PEDHEP ...","title":"New feature: Upload new gene panel"},{"location":"blog/new-3.3/","text":"What's new in 3.3? Posted: 2 Aug 2017 Hey Scout-users! It's time for a new update and with quite a few features this time \ud83d\ude03 ACMG classifications! The flagship feature addition is the new ACMG classification interface. You can get to it from any variant. It will take you first to a page where you fill in evidence which Scout uses to calculate a classification - you can, however, override this later! We store a history of all classifications for a variant if it's updated later. Please try it out and get back to us with your feedback! New users view We've added a new views for displaying all users of Scout. You can see name, email, and which institutes they belong to if you need to contact someone. We also introduced a \"rank\" based on how much you interact with Scout! Check out how you are doing here: Scout Users . More new features: Cases are now listed by status in separate groups - only the latest 100 cases are listed! Upload of gene panel export Dynamic gene panel is back! You can now upload a list of HGNC symbols to do a temporary search Scout will now display exon as well as intron number in the Sanger email You can now filter variants on local observations in the SNV view and they will show up in the popup Scout will now display if a variant is in the PAR region or not You can now update the default gene panels directly in Scout - no need to rerun! We've added labels to the variant tags according to proposed example from CMMS If variant is in an autozygocity block it will now be displayed Bug fixes A warning is now displayed is you search for a gene symbol that doesn't exist in Scout When filtering on frequencies, Scout now handles input as \"0,04\" and \"0.04\" We will now use coordinates instead of gene identifier when looking for overlapping SV/SNV variants Scout now correctly displays a notice if a variant has been commented on CLINSIG annotations are now properly displayed! We've fixed display of expected inheritance model on variant page Future updates We have prepared additional features which will not immediately show up in Scout but might require e.g. an update to MIP. New cancer view: we've added rudimentary support for display cancer variants in Scout as a separate view much like the SV view. We've added support for displaying information from Peddy such as confirmed parenthood, sex, and predicted ancestry Hope you've had a great summer!","title":"Whats new in 3.3?"},{"location":"blog/new-3.3/#whats-new-in-33","text":"Posted: 2 Aug 2017 Hey Scout-users! It's time for a new update and with quite a few features this time \ud83d\ude03","title":"What's new in 3.3?"},{"location":"blog/new-3.3/#acmg-classifications","text":"The flagship feature addition is the new ACMG classification interface. You can get to it from any variant. It will take you first to a page where you fill in evidence which Scout uses to calculate a classification - you can, however, override this later! We store a history of all classifications for a variant if it's updated later. Please try it out and get back to us with your feedback!","title":"ACMG classifications!"},{"location":"blog/new-3.3/#new-users-view","text":"We've added a new views for displaying all users of Scout. You can see name, email, and which institutes they belong to if you need to contact someone. We also introduced a \"rank\" based on how much you interact with Scout! Check out how you are doing here: Scout Users .","title":"New users view"},{"location":"blog/new-3.3/#more-new-features","text":"Cases are now listed by status in separate groups - only the latest 100 cases are listed! Upload of gene panel export Dynamic gene panel is back! You can now upload a list of HGNC symbols to do a temporary search Scout will now display exon as well as intron number in the Sanger email You can now filter variants on local observations in the SNV view and they will show up in the popup Scout will now display if a variant is in the PAR region or not You can now update the default gene panels directly in Scout - no need to rerun! We've added labels to the variant tags according to proposed example from CMMS If variant is in an autozygocity block it will now be displayed","title":"More new features:"},{"location":"blog/new-3.3/#bug-fixes","text":"A warning is now displayed is you search for a gene symbol that doesn't exist in Scout When filtering on frequencies, Scout now handles input as \"0,04\" and \"0.04\" We will now use coordinates instead of gene identifier when looking for overlapping SV/SNV variants Scout now correctly displays a notice if a variant has been commented on CLINSIG annotations are now properly displayed! We've fixed display of expected inheritance model on variant page","title":"Bug fixes"},{"location":"blog/new-3.3/#future-updates","text":"We have prepared additional features which will not immediately show up in Scout but might require e.g. an update to MIP. New cancer view: we've added rudimentary support for display cancer variants in Scout as a separate view much like the SV view. We've added support for displaying information from Peddy such as confirmed parenthood, sex, and predicted ancestry Hope you've had a great summer!","title":"Future updates"},{"location":"blog/new-3.4/","text":"What's new in 3.4? Posted: 19 Sep 2017 Time for a new update - this time without any major changes New features Aggregate dashboard: view global statistics like how many cases have been solved in Scout? Pin and mark SV variants, thanks @dnil! Gene view: information is now displayed for both build GRCh37 and GRCh38 you can now filter genes by HGNC id as well as HGNC symbol new popup with variant comments, thanks @dnil! we now store more information about previous analyses for every case like delivery report the gene panel update function has been improved and the documentation is also up-to-date! Fixes worked to improve the documentation in general fixed issue that made commenting on a variant fail cases will now change status from \"solved\" when unmarking causative fixed a bug with the ClinSig filter, thanks @dnil! the order of ACMG classification and criteria is now correct you can now toggle a selected ACMG classification on/off the OMIM inheritance concordance is now fixed","title":"Whats new in 3.4?"},{"location":"blog/new-3.4/#whats-new-in-34","text":"Posted: 19 Sep 2017 Time for a new update - this time without any major changes","title":"What's new in 3.4?"},{"location":"blog/new-3.4/#new-features","text":"Aggregate dashboard: view global statistics like how many cases have been solved in Scout? Pin and mark SV variants, thanks @dnil! Gene view: information is now displayed for both build GRCh37 and GRCh38 you can now filter genes by HGNC id as well as HGNC symbol new popup with variant comments, thanks @dnil! we now store more information about previous analyses for every case like delivery report the gene panel update function has been improved and the documentation is also up-to-date!","title":"New features"},{"location":"blog/new-3.4/#fixes","text":"worked to improve the documentation in general fixed issue that made commenting on a variant fail cases will now change status from \"solved\" when unmarking causative fixed a bug with the ClinSig filter, thanks @dnil! the order of ACMG classification and criteria is now correct you can now toggle a selected ACMG classification on/off the OMIM inheritance concordance is now fixed","title":"Fixes"},{"location":"blog/new-3.5/","text":"What's new in 3.5? \ud83c\udf41 Posted: 13 Nov 2017 The November update includes the following highlights: New features You can now add an entirely NEW gene panel directly from Scout \ud83c\udd95 Scout now uploads ALL variants on the mitochondrial chromosome (MT) - independently of rank score Improvements to SV variant view: New frequencies: ClinGen CGH and Decipher Callers are displayed under GT call table You can now tag (variant tag) and comment on SV variants Gene panels now are now displayed \"n.d.\" (Not Determined) is now displayed when the variant length is unknown We now report if you filtered for a gene in the clinical list which isn't part of any gene panel Bugfixes Versions of transcripts are now kept for \"disease causing transcripts\" in the panels Ensembl transcript will now display in overview if no RefSeq transcript exists You can now reset the variant tag You can now filter variants on both HGNC ID and symbol We fixed an issue related to showing matching causative variants for a case Filtering on local observations will now include variant without any such annotations","title":"Whats new in 3.5?"},{"location":"blog/new-3.5/#whats-new-in-35","text":"Posted: 13 Nov 2017 The November update includes the following highlights:","title":"What's new in 3.5? \ud83c\udf41"},{"location":"blog/new-3.5/#new-features","text":"You can now add an entirely NEW gene panel directly from Scout \ud83c\udd95 Scout now uploads ALL variants on the mitochondrial chromosome (MT) - independently of rank score Improvements to SV variant view: New frequencies: ClinGen CGH and Decipher Callers are displayed under GT call table You can now tag (variant tag) and comment on SV variants Gene panels now are now displayed \"n.d.\" (Not Determined) is now displayed when the variant length is unknown We now report if you filtered for a gene in the clinical list which isn't part of any gene panel","title":"New features"},{"location":"blog/new-3.5/#bugfixes","text":"Versions of transcripts are now kept for \"disease causing transcripts\" in the panels Ensembl transcript will now display in overview if no RefSeq transcript exists You can now reset the variant tag You can now filter variants on both HGNC ID and symbol We fixed an issue related to showing matching causative variants for a case Filtering on local observations will now include variant without any such annotations","title":"Bugfixes"},{"location":"blog/new-4.0.0/","text":"What's new in 4.0.0? \ud83c\udf41 Posted: 15 June 2018 This major update includes the following highlights: New features Finally!! There will always be a downloadable case report available at case page (great stuff @northwestwitch)\ud83e\udd84 Scout now uploads ALL variants from the mitochondrial chromosome (MT) - independently of rank score both for clinical and research variants Filter on spidex levels are now available Filter on chromosome is possible, mainly to get easy access to MT variants It is possible to produce a clinvar submission files from the case page that could be used to submit variants to clinvar All existing HPO terms now lives in scout. They should also be presented in a more relevant order when searched for Users can choose how many cases that should be displayed on case page (thanks @dnil \ud83d\udc1d) Bugfixes Clinvar annotations are back! Compound links will work when all compounds are uploaded for a region Sanger order can be removed Polyphen annotation is back There are many more things that has been worked on \"under the hood\", we hope that you will have a better experience with Scout.","title":"Whats new in 4.0?"},{"location":"blog/new-4.0.0/#whats-new-in-400","text":"Posted: 15 June 2018 This major update includes the following highlights:","title":"What's new in 4.0.0? \ud83c\udf41"},{"location":"blog/new-4.0.0/#new-features","text":"Finally!! There will always be a downloadable case report available at case page (great stuff @northwestwitch)\ud83e\udd84 Scout now uploads ALL variants from the mitochondrial chromosome (MT) - independently of rank score both for clinical and research variants Filter on spidex levels are now available Filter on chromosome is possible, mainly to get easy access to MT variants It is possible to produce a clinvar submission files from the case page that could be used to submit variants to clinvar All existing HPO terms now lives in scout. They should also be presented in a more relevant order when searched for Users can choose how many cases that should be displayed on case page (thanks @dnil \ud83d\udc1d)","title":"New features"},{"location":"blog/new-4.0.0/#bugfixes","text":"Clinvar annotations are back! Compound links will work when all compounds are uploaded for a region Sanger order can be removed Polyphen annotation is back There are many more things that has been worked on \"under the hood\", we hope that you will have a better experience with Scout.","title":"Bugfixes"},{"location":"blog/new-4.17/","text":"What's new in 4.17? \ud83c\udf41 Posted: 3 Jun 2020 Minor release 4.17 and its patch (4.17.1) introduce the following new features/bugfixes: New features COSMIC badge shown in cancer variants Default gene-panel in non-cancer structural view in url (thanks @ViktorHy) Filter SNVs and SVs by cytoband coordinates (read here how to enable the functionality) Filter cancer SNV variants by alt allele frequency in tumor Correct genome build in UCSC link from structural variant page (much appreciated @ViktorHy) Bugfixes Bug in clinVar form when variant has no gene Bug when sharing cases with the same institute twice Page crashing when removing causative variant tag Do not default to GATK caller when no caller info is provided for cancer SNVs Loading chromosome cytobands to use them in variant filtering Cytoband files for genome builds GRCh37 and GRCh38 (37 and and 38 in Scout) are provided in resources folder. In order to use cytoband filtering in variants (SNV/Indels or structural variants), cytoband coordinates should be loaded to Scout database Cytoband database collection is automatically populated when a new Scout setup is initiated using the command: scout setup database To load cytobands in a Scout database already containing data, from the command line simply type: scout load cytobands","title":"Whats new in 4.17?"},{"location":"blog/new-4.17/#whats-new-in-417","text":"Posted: 3 Jun 2020 Minor release 4.17 and its patch (4.17.1) introduce the following new features/bugfixes:","title":"What's new in 4.17? \ud83c\udf41"},{"location":"blog/new-4.17/#new-features","text":"COSMIC badge shown in cancer variants Default gene-panel in non-cancer structural view in url (thanks @ViktorHy) Filter SNVs and SVs by cytoband coordinates (read here how to enable the functionality) Filter cancer SNV variants by alt allele frequency in tumor Correct genome build in UCSC link from structural variant page (much appreciated @ViktorHy)","title":"New features"},{"location":"blog/new-4.17/#bugfixes","text":"Bug in clinVar form when variant has no gene Bug when sharing cases with the same institute twice Page crashing when removing causative variant tag Do not default to GATK caller when no caller info is provided for cancer SNVs","title":"Bugfixes"},{"location":"blog/new-4.17/#loading-chromosome-cytobands-to-use-them-in-variant-filtering","text":"Cytoband files for genome builds GRCh37 and GRCh38 (37 and and 38 in Scout) are provided in resources folder. In order to use cytoband filtering in variants (SNV/Indels or structural variants), cytoband coordinates should be loaded to Scout database Cytoband database collection is automatically populated when a new Scout setup is initiated using the command: scout setup database To load cytobands in a Scout database already containing data, from the command line simply type: scout load cytobands","title":"Loading chromosome cytobands to use them in variant filtering"},{"location":"blog/new-4.18/","text":"What's new in 4.18? \ud83c\udf41 Posted: 18 Jun 2020 One of the most important changes introduced in this version is that we have switched from a Google login system based on Flask-OAuthlib to Authlib libraries. In order to support the new login system Scout administrators would need to modify the config settings as described in this updated guide . This is a complete list of all changes introduced in this new release: [4.18] New features Filter cancer variants on cytoband coordinates Show dismiss reasons in a badge with hover for clinical variants Show an ellipsis if 10 cases or more to display with loqusdb matches A new blog post for version 4.17 Tooltip to better describe Tumor and Normal columns in cancer variants Filter cancer SNVs and SVs by chromosome coordinates Default export of Assertion method citation to clinVar variants submission file Button to export up to 500 cancer variants, filtered or not Rename samples of a clinVar submission file Bugfixes Apply default gene panel on return to cancer variantS from variant view Revert to certificate checking when asking for Chanjo reports scout download everything command failing while downloading HPO terms Changes Turn tumor and normal allelic fraction to decimal numbers in tumor variants page Moved clinVar submissions code to the institutes blueprints Changed name of clinVar export files to FILENAME.Variant.csv and FILENAME.CaseData.csv Switched Google login libraries from Flask-OAuthlib to Authlib","title":"Whats new in 4.18?"},{"location":"blog/new-4.18/#whats-new-in-418","text":"Posted: 18 Jun 2020 One of the most important changes introduced in this version is that we have switched from a Google login system based on Flask-OAuthlib to Authlib libraries. In order to support the new login system Scout administrators would need to modify the config settings as described in this updated guide . This is a complete list of all changes introduced in this new release:","title":"What's new in 4.18? \ud83c\udf41"},{"location":"blog/new-4.18/#418","text":"","title":"[4.18]"},{"location":"blog/new-4.18/#new-features","text":"Filter cancer variants on cytoband coordinates Show dismiss reasons in a badge with hover for clinical variants Show an ellipsis if 10 cases or more to display with loqusdb matches A new blog post for version 4.17 Tooltip to better describe Tumor and Normal columns in cancer variants Filter cancer SNVs and SVs by chromosome coordinates Default export of Assertion method citation to clinVar variants submission file Button to export up to 500 cancer variants, filtered or not Rename samples of a clinVar submission file","title":"New features"},{"location":"blog/new-4.18/#bugfixes","text":"Apply default gene panel on return to cancer variantS from variant view Revert to certificate checking when asking for Chanjo reports scout download everything command failing while downloading HPO terms","title":"Bugfixes"},{"location":"blog/new-4.18/#changes","text":"Turn tumor and normal allelic fraction to decimal numbers in tumor variants page Moved clinVar submissions code to the institutes blueprints Changed name of clinVar export files to FILENAME.Variant.csv and FILENAME.CaseData.csv Switched Google login libraries from Flask-OAuthlib to Authlib","title":"Changes"},{"location":"blog/new-4.7.2/","text":"What's new in 4.7.2? \ud83c\udf41 Posted: 2 October 2019 This minor update includes the following highlights: New features Show earlier ACMG classification in the variant list (Thanks @bjhall!) Bugfixes Fixed igv search not working due to igv.js dist 2.2.17 Fixed searches for cases with a gene with variants pinned or marked causative. Load variant pages faster after fixing other causatives query :racing_car: :dash:","title":"New 4.7.2"},{"location":"blog/new-4.7.2/#whats-new-in-472","text":"Posted: 2 October 2019 This minor update includes the following highlights:","title":"What's new in 4.7.2? \ud83c\udf41"},{"location":"blog/new-4.7.2/#new-features","text":"Show earlier ACMG classification in the variant list (Thanks @bjhall!)","title":"New features"},{"location":"blog/new-4.7.2/#bugfixes","text":"Fixed igv search not working due to igv.js dist 2.2.17 Fixed searches for cases with a gene with variants pinned or marked causative. Load variant pages faster after fixing other causatives query :racing_car: :dash:","title":"Bugfixes"},{"location":"blog/new-4.7.3/","text":"What's new in 4.7.3? \ud83c\udf41 Posted: 5 October 2019 This minor update - possibly the last before switching to bootstrap4 - includes the following highlights: [4.7.3] Added RankScore can be used with VCFs for vcf_cancer files Fixed Fix issue with STR view next page button not doing its one job. Fixed mitochondrial report bug for variants without genes Deleted Removed pileup as a bam viewing option. This is replaced by IGV","title":"Whats new in 4.7?"},{"location":"blog/new-4.7.3/#whats-new-in-473","text":"Posted: 5 October 2019 This minor update - possibly the last before switching to bootstrap4 - includes the following highlights:","title":"What's new in 4.7.3? \ud83c\udf41"},{"location":"blog/new-4.7.3/#473","text":"","title":"[4.7.3]"},{"location":"blog/new-4.7.3/#added","text":"RankScore can be used with VCFs for vcf_cancer files","title":"Added"},{"location":"blog/new-4.7.3/#fixed","text":"Fix issue with STR view next page button not doing its one job. Fixed mitochondrial report bug for variants without genes","title":"Fixed"},{"location":"blog/new-4.7.3/#deleted","text":"Removed pileup as a bam viewing option. This is replaced by IGV","title":"Deleted"},{"location":"features/hpo/","text":"HPO phenotypes For every case you have the opportunity to add related HPO phenotype terms to describe the phenotype of the patient(s). This structured data can then be used in some interesting ways. You access all these features from the case page. HPO gene panel Every HPO term is linked to a set of genes. It it interesting to see which genes that overlap with your phenotype terms. To generate such a list, locate the \"HPO panel\" button. You can optionally select which terms to include by using the check boxes next to the HPO terms. By default only genes matching every selected HPO term is returned. This setting can be customized by entering the minimum number of HPO terms a gene is required to overlap. The panel is only stored until a user regenerates the panel! The generated panel will show up just below under \"HPO gene panel\". Phenomizer diseases The second option is to use the same HPO terms as input to the Phenomizer service. This will use you selected phenotypes to look up possible OMIM diseases. You will be presented with all hits on a new page where you can select which diseases to proceed with. Phenomizer associates a P-value with each disease which tells you something about the likelihood of each disease match. You can also see which genes are associated with every disease in the last column. When you've made your selection, click \"Select\" at the bottom of the table. Scout will then store all the associated genes and list them in the \"HPO gene panel\" list on the \"case\" page.","title":"HPO phenotypes"},{"location":"features/hpo/#hpo-phenotypes","text":"For every case you have the opportunity to add related HPO phenotype terms to describe the phenotype of the patient(s). This structured data can then be used in some interesting ways. You access all these features from the case page.","title":"HPO phenotypes"},{"location":"features/hpo/#hpo-gene-panel","text":"Every HPO term is linked to a set of genes. It it interesting to see which genes that overlap with your phenotype terms. To generate such a list, locate the \"HPO panel\" button. You can optionally select which terms to include by using the check boxes next to the HPO terms. By default only genes matching every selected HPO term is returned. This setting can be customized by entering the minimum number of HPO terms a gene is required to overlap. The panel is only stored until a user regenerates the panel! The generated panel will show up just below under \"HPO gene panel\".","title":"HPO gene panel"},{"location":"features/hpo/#phenomizer-diseases","text":"The second option is to use the same HPO terms as input to the Phenomizer service. This will use you selected phenotypes to look up possible OMIM diseases. You will be presented with all hits on a new page where you can select which diseases to proceed with. Phenomizer associates a P-value with each disease which tells you something about the likelihood of each disease match. You can also see which genes are associated with every disease in the last column. When you've made your selection, click \"Select\" at the bottom of the table. Scout will then store all the associated genes and list them in the \"HPO gene panel\" list on the \"case\" page.","title":"Phenomizer diseases"},{"location":"user-guide/","text":"Scout user guide Scout is a web-based visualizer for VCF-files. It helps to manage multiple patient cases in a unified and intuitive interface. Users can collaborate with other clinicians sharing comments and findings across your team. Overview Getting Started General Usage Pages Institutes Users Cases Variants Genes Gene Panels Annotations ACMG criterias Dashboard","title":"Scout user guide"},{"location":"user-guide/#scout-user-guide","text":"Scout is a web-based visualizer for VCF-files. It helps to manage multiple patient cases in a unified and intuitive interface. Users can collaborate with other clinicians sharing comments and findings across your team.","title":"Scout user guide"},{"location":"user-guide/#overview","text":"Getting Started General Usage Pages Institutes Users Cases Variants Genes Gene Panels Annotations ACMG criterias Dashboard","title":"Overview"},{"location":"user-guide/acmg-criterias/","text":"Evidence of pathogenecity Very Strong PVS1 Null variant (nonsense, frameshift, canonical \u00b11 or 2 splice sites, initiation codon, single or multiexon deletion) in a gene where LOF is a known mechanism of disease Caveats: Beware of genes where LOF is not a known disease mechanism (e.g., GFAP, MYH7) Use caution interpreting LOF variants at the extreme 3\u2032 end of a gene Use caution with splice variants that are predicted to lead to exon skipping but leave the remainder of the protein intact Use caution in the presence of multiple transcripts Strong PS1 Same amino acid change as a previously established pathogenic variant regardless of nucleotide change Example: Val\u2192Leu caused by either G>C or G>T in the same codon Caveat: Beware of changes that impact splicing rather than at the amino acid/protein level PS2 De novo (both maternity and paternity confirmed) in a patient with the disease and no family history. Note: Confirmation of paternity only is insufficient. Egg donation, surrogate motherhood, errors in embryo transfer, and so on, can contribute to nonmaternity. PS3 Well-established in vitro or in vivo functional studies supportive of a damaging effect on the gene or gene product. Note: Functional studies that have been validated and shown to be reproducible and robust in a clinical diagnostic laboratory setting are considered the most well established. PS4 The prevalence of the variant in affected individuals is significantly increased compared with the prevalence in controls. Note 1: Relative risk or OR, as obtained from case\u2013control studies, is >5.0, and the confidence interval around the estimate of relative risk or OR does not include 1.0. See the article for detailed guidance. Note 2: In instances of very rare variants where case\u2013control studies may not reach statistical significance, the prior observation of the variant in multiple unrelated patients with the same phenotype, and its absence in controls, may be used as moderate level of evidence. Moderate PM1 Located in a mutational hot spot and/or critical and well-established functional domain (e.g., active site of an enzyme) without benign variation. PM2 Absent from controls (or at extremely low frequency if recessive) (Table 6) in Exome Sequencing Project, 1000 Genomes Project, or Exome Aggregation Consortium Caveat: Population data for insertions/deletions may be poorly called by next-generation sequencing. PM3 For recessive disorders, detected in trans with a pathogenic variant Note: This requires testing of parents (or offspring) to determine phase. PM4 Protein length changes as a result of in-frame deletions/insertions in a nonrepeat region or stop-loss variants. PM5 Novel missense change at an amino acid residue where a different missense change determined to be pathogenic has been seen before. Example: Arg156His is pathogenic; now you observe Arg156Cys Caveat: Beware of changes that impact splicing rather than at the amino acid/protein level. PM6 Assumed de novo, but without confirmation of paternity and maternity Supporting PP1 Cosegregation with disease in multiple affected family members in a gene definitively known to cause the disease. Note: May be used as stronger evidence with increasing segregation data PP2 Missense variant in a gene that has a low rate of benign missense variation and in which missense variants are a common mechanism of disease. PP3 Multiple lines of computational evidence support a deleterious effect on the gene or gene product (conservation, evolutionary, splicing impact, etc.). Caveat: Because many in silico algorithms use the same or very similar input for their predictions, each algorithm should not be counted as an independent criterion. PP3 can be used only once in any evaluation of a variant. PP4 Patient\u2019s phenotype or family history is highly specific for a disease with a single genetic etiology. PP5 Reputable source recently reports variant as pathogenic, but the evidence is not available to the laboratory to perform an independent evaluation. Evidence of benign impact Stand-alone BA1 Allele frequency is >5% in Exome Sequencing Project, 1000 Genomes Project, or Exome Aggregation Consortium. Strong BS1 Allele frequency is greater than expected for disorder (see Table 6) BS2 Observed in a healthy adult individual for a recessive (homozygous), dominant (heterozygous), or X-linked (hemizygous) disorder, with full penetrance expected at an early age. BS3 Well-established in vitro or in vivo functional studies show no damaging effect on protein function or splicing. BS4 Lack of segregation in affected members of a family Caveat: The presence of phenocopies for common phenotypes (i.e., cancer, epilepsy) can mimic lack of segregation among affected individuals. Also, families may have more than one pathogenic variant contributing to an autosomal dominant disorder, further confounding an apparent lack of segregation. Supporting BP1 Missense variant in a gene for which primarily truncating variants are known to cause disease. BP2 Observed in trans with a pathogenic variant for a fully penetrant dominant gene/disorder or observed in cis with a pathogenic variant in any inheritance pattern. BP3 In-frame deletions/insertions in a repetitive region without a known function. BP4 Multiple lines of computational evidence suggest no impact on gene or gene product (conservation, evolutionary, splicing impact, etc.). Caveat: Because many in silico algorithms use the same or very similar input for their predictions, each algorithm cannot be counted as an independent criterion. BP4 can be used only once in any evaluation of a variant. BP5 Variant found in a case with an alternate molecular basis for disease. BP6 Reputable source recently reports variant as benign, but the evidence is not available to the laboratory to perform an independent evaluation. BP7 A synonymous (silent) variant for which splicing prediction algorithms predict no impact to the splice consensus sequence nor the creation of a new splice site AND the nucleotide is not highly conserved.","title":"ACMG"},{"location":"user-guide/acmg-criterias/#evidence-of-pathogenecity","text":"","title":"Evidence of pathogenecity"},{"location":"user-guide/acmg-criterias/#very-strong","text":"","title":"Very Strong"},{"location":"user-guide/acmg-criterias/#pvs1","text":"Null variant (nonsense, frameshift, canonical \u00b11 or 2 splice sites, initiation codon, single or multiexon deletion) in a gene where LOF is a known mechanism of disease Caveats: Beware of genes where LOF is not a known disease mechanism (e.g., GFAP, MYH7) Use caution interpreting LOF variants at the extreme 3\u2032 end of a gene Use caution with splice variants that are predicted to lead to exon skipping but leave the remainder of the protein intact Use caution in the presence of multiple transcripts","title":"PVS1"},{"location":"user-guide/acmg-criterias/#strong","text":"","title":"Strong"},{"location":"user-guide/acmg-criterias/#ps1","text":"Same amino acid change as a previously established pathogenic variant regardless of nucleotide change Example: Val\u2192Leu caused by either G>C or G>T in the same codon Caveat: Beware of changes that impact splicing rather than at the amino acid/protein level","title":"PS1"},{"location":"user-guide/acmg-criterias/#ps2","text":"De novo (both maternity and paternity confirmed) in a patient with the disease and no family history. Note: Confirmation of paternity only is insufficient. Egg donation, surrogate motherhood, errors in embryo transfer, and so on, can contribute to nonmaternity.","title":"PS2"},{"location":"user-guide/acmg-criterias/#ps3","text":"Well-established in vitro or in vivo functional studies supportive of a damaging effect on the gene or gene product. Note: Functional studies that have been validated and shown to be reproducible and robust in a clinical diagnostic laboratory setting are considered the most well established.","title":"PS3"},{"location":"user-guide/acmg-criterias/#ps4","text":"The prevalence of the variant in affected individuals is significantly increased compared with the prevalence in controls. Note 1: Relative risk or OR, as obtained from case\u2013control studies, is >5.0, and the confidence interval around the estimate of relative risk or OR does not include 1.0. See the article for detailed guidance. Note 2: In instances of very rare variants where case\u2013control studies may not reach statistical significance, the prior observation of the variant in multiple unrelated patients with the same phenotype, and its absence in controls, may be used as moderate level of evidence.","title":"PS4"},{"location":"user-guide/acmg-criterias/#moderate","text":"","title":"Moderate"},{"location":"user-guide/acmg-criterias/#pm1","text":"Located in a mutational hot spot and/or critical and well-established functional domain (e.g., active site of an enzyme) without benign variation.","title":"PM1"},{"location":"user-guide/acmg-criterias/#pm2","text":"Absent from controls (or at extremely low frequency if recessive) (Table 6) in Exome Sequencing Project, 1000 Genomes Project, or Exome Aggregation Consortium Caveat: Population data for insertions/deletions may be poorly called by next-generation sequencing.","title":"PM2"},{"location":"user-guide/acmg-criterias/#pm3","text":"For recessive disorders, detected in trans with a pathogenic variant Note: This requires testing of parents (or offspring) to determine phase.","title":"PM3"},{"location":"user-guide/acmg-criterias/#pm4","text":"Protein length changes as a result of in-frame deletions/insertions in a nonrepeat region or stop-loss variants.","title":"PM4"},{"location":"user-guide/acmg-criterias/#pm5","text":"Novel missense change at an amino acid residue where a different missense change determined to be pathogenic has been seen before. Example: Arg156His is pathogenic; now you observe Arg156Cys Caveat: Beware of changes that impact splicing rather than at the amino acid/protein level. PM6 Assumed de novo, but without confirmation of paternity and maternity","title":"PM5"},{"location":"user-guide/acmg-criterias/#supporting","text":"","title":"Supporting"},{"location":"user-guide/acmg-criterias/#pp1","text":"Cosegregation with disease in multiple affected family members in a gene definitively known to cause the disease. Note: May be used as stronger evidence with increasing segregation data","title":"PP1"},{"location":"user-guide/acmg-criterias/#pp2","text":"Missense variant in a gene that has a low rate of benign missense variation and in which missense variants are a common mechanism of disease.","title":"PP2"},{"location":"user-guide/acmg-criterias/#pp3","text":"Multiple lines of computational evidence support a deleterious effect on the gene or gene product (conservation, evolutionary, splicing impact, etc.). Caveat: Because many in silico algorithms use the same or very similar input for their predictions, each algorithm should not be counted as an independent criterion. PP3 can be used only once in any evaluation of a variant.","title":"PP3"},{"location":"user-guide/acmg-criterias/#pp4","text":"Patient\u2019s phenotype or family history is highly specific for a disease with a single genetic etiology.","title":"PP4"},{"location":"user-guide/acmg-criterias/#pp5","text":"Reputable source recently reports variant as pathogenic, but the evidence is not available to the laboratory to perform an independent evaluation.","title":"PP5"},{"location":"user-guide/acmg-criterias/#evidence-of-benign-impact","text":"","title":"Evidence of benign impact"},{"location":"user-guide/acmg-criterias/#stand-alone","text":"","title":"Stand-alone"},{"location":"user-guide/acmg-criterias/#ba1","text":"Allele frequency is >5% in Exome Sequencing Project, 1000 Genomes Project, or Exome Aggregation Consortium.","title":"BA1"},{"location":"user-guide/acmg-criterias/#strong_1","text":"","title":"Strong"},{"location":"user-guide/acmg-criterias/#bs1","text":"Allele frequency is greater than expected for disorder (see Table 6)","title":"BS1"},{"location":"user-guide/acmg-criterias/#bs2","text":"Observed in a healthy adult individual for a recessive (homozygous), dominant (heterozygous), or X-linked (hemizygous) disorder, with full penetrance expected at an early age.","title":"BS2"},{"location":"user-guide/acmg-criterias/#bs3","text":"Well-established in vitro or in vivo functional studies show no damaging effect on protein function or splicing.","title":"BS3"},{"location":"user-guide/acmg-criterias/#bs4","text":"Lack of segregation in affected members of a family Caveat: The presence of phenocopies for common phenotypes (i.e., cancer, epilepsy) can mimic lack of segregation among affected individuals. Also, families may have more than one pathogenic variant contributing to an autosomal dominant disorder, further confounding an apparent lack of segregation.","title":"BS4"},{"location":"user-guide/acmg-criterias/#supporting_1","text":"","title":"Supporting"},{"location":"user-guide/acmg-criterias/#bp1","text":"Missense variant in a gene for which primarily truncating variants are known to cause disease.","title":"BP1"},{"location":"user-guide/acmg-criterias/#bp2","text":"Observed in trans with a pathogenic variant for a fully penetrant dominant gene/disorder or observed in cis with a pathogenic variant in any inheritance pattern.","title":"BP2"},{"location":"user-guide/acmg-criterias/#bp3","text":"In-frame deletions/insertions in a repetitive region without a known function.","title":"BP3"},{"location":"user-guide/acmg-criterias/#bp4","text":"Multiple lines of computational evidence suggest no impact on gene or gene product (conservation, evolutionary, splicing impact, etc.). Caveat: Because many in silico algorithms use the same or very similar input for their predictions, each algorithm cannot be counted as an independent criterion. BP4 can be used only once in any evaluation of a variant.","title":"BP4"},{"location":"user-guide/acmg-criterias/#bp5","text":"Variant found in a case with an alternate molecular basis for disease.","title":"BP5"},{"location":"user-guide/acmg-criterias/#bp6","text":"Reputable source recently reports variant as benign, but the evidence is not available to the laboratory to perform an independent evaluation.","title":"BP6"},{"location":"user-guide/acmg-criterias/#bp7","text":"A synonymous (silent) variant for which splicing prediction algorithms predict no impact to the splice consensus sequence nor the creation of a new splice site AND the nucleotide is not highly conserved.","title":"BP7"},{"location":"user-guide/annotations/","text":"Annotations This page will describe what is displayed in scout, what the different annotations mean and how they are parsed from the vcf file. Frequencies 1000G The frequency from the 1000G population database. 1000G_MAX_AF The maximum allele frequency of all populations in the 1000G population database. ExAC The frequency from the ExAC population database. ExAC_MAX_AF The maximum allele frequency of all populations ExAC population database. Severity CADD score The Combined Annotation Dependent Depletion( CADD ) score. A prediction of the deleterioussness for a variant. SIFT The SIFT ) prediction for how a variation affects the protein. PolyPhen The PolyPhen ) prediction for how a variation affects the protein. Conservation Gerp The Genomic Evolutionary Rate Profiling( GERP ) conservation string. An estimation of how conserved this position is. phastCons The PHASTcons conservation string. phylop The phylop 100 way predicted conservation string. External ID COSMIC A matching exact CHROM, POS, REF, ALT from vcf with Catalogue Of Somatic Mutations In Cancer ( COSMIC ). A link to COSMIC if a matching COSMIC variant is found.","title":"Annotations"},{"location":"user-guide/annotations/#annotations","text":"This page will describe what is displayed in scout, what the different annotations mean and how they are parsed from the vcf file.","title":"Annotations"},{"location":"user-guide/annotations/#frequencies","text":"","title":"Frequencies"},{"location":"user-guide/annotations/#1000g","text":"The frequency from the 1000G population database.","title":"1000G"},{"location":"user-guide/annotations/#1000g_max_af","text":"The maximum allele frequency of all populations in the 1000G population database.","title":"1000G_MAX_AF"},{"location":"user-guide/annotations/#exac","text":"The frequency from the ExAC population database.","title":"ExAC"},{"location":"user-guide/annotations/#exac_max_af","text":"The maximum allele frequency of all populations ExAC population database.","title":"ExAC_MAX_AF"},{"location":"user-guide/annotations/#severity","text":"","title":"Severity"},{"location":"user-guide/annotations/#cadd-score","text":"The Combined Annotation Dependent Depletion( CADD ) score. A prediction of the deleterioussness for a variant.","title":"CADD score"},{"location":"user-guide/annotations/#sift","text":"The SIFT ) prediction for how a variation affects the protein.","title":"SIFT"},{"location":"user-guide/annotations/#polyphen","text":"The PolyPhen ) prediction for how a variation affects the protein.","title":"PolyPhen"},{"location":"user-guide/annotations/#conservation","text":"","title":"Conservation"},{"location":"user-guide/annotations/#gerp","text":"The Genomic Evolutionary Rate Profiling( GERP ) conservation string. An estimation of how conserved this position is.","title":"Gerp"},{"location":"user-guide/annotations/#phastcons","text":"The PHASTcons conservation string.","title":"phastCons"},{"location":"user-guide/annotations/#phylop","text":"The phylop 100 way predicted conservation string.","title":"phylop"},{"location":"user-guide/annotations/#external-id","text":"","title":"External ID"},{"location":"user-guide/annotations/#cosmic","text":"A matching exact CHROM, POS, REF, ALT from vcf with Catalogue Of Somatic Mutations In Cancer ( COSMIC ). A link to COSMIC if a matching COSMIC variant is found.","title":"COSMIC"},{"location":"user-guide/cases/","text":"Cases This page displays the list of active cases for a particular institute. Each item links to the detailed view for that case. You can filter the list by typing into the search box above the list. A quick link to get straight to the list of all clinical variants is also displayed. To indicate what cases have recently been added/updated, a \"last updated\" date is also displayed. Sometimes you will also see a cyan colored dot to the left of the case ID. This is an indicator that there's been some recent activity in the case such as a new comment. Your name will be tagged for each case that is assigned to you. For cases that are assigned to other people you will see a tag \"ASSIGNED\". In the search field you can enter search terms to limit the list displayed. Entering a user name shows only cases assigned to that user. A case- or sample id will return only cases with matches to those ids. A search starting with \"HP:\", e.g. \"HP:0002664\" will return cases with exactly matching HPO phenotype terms . A search starting with \"synopsis:\", e.g. \"synopsis:epilepsy\" will return cases with free text matches to the string following \"synopsis:\". Case This is the detailed view of one individual case. The intended use is to give a concise overview of the family under investigation and show recent activity related to the case. Case report page It can be visualized by clicking on the 'Visualize report' link on the left sidebar present on the case view. The case report contains a phenotype info panel as well as an overview of the gene panels used for the analysis. This page is showing also any variant users have been interacting with when working with the case: causative variants, variants pinned as candidates, ACMG or otherwise manually classified variants, as well as variants with any comment field. At the bottom of the report page the 'Dismissed variants' panel lists all variants that have been dismissed, with the reason(s) why they were rejected as candidates. By clicking on the top right button the case report can be exported and saved into a PDF file. Pinned variants There's a list of \"Strong candidates\" on the page. This list is curated by the collaborators and consists of \"pinned\" variants from the variants list. This feature can be used to mark variants of particular interest that you might want to highlight to other users. Pinned variants for cases with at least one assigned HPO phenotype can be used to produce Clinvar submission files (See more under \"Variant\"). Misc. The case page also displays a simple wiki-style synopsis on the current case that can be used to communicate information on the case to collaborators. Rank model version shows which rank model that has been used to rank the variants in the case The \"Activity\" feed is a reverse chronological list of events and comments related to the case. Examples of events include comments, status updates, assignments, Sanger sequencing orders etc. Actions There are a few actions you can take on this page. Adopt case : By clicking the button next to \"Adopt\" you can assign yourself to a case. More than one person can be assigned to a case, e.g. if multiple professions or institutes are involved in analysis. If you have assigned yourself to a case you can click your name to \"unassign\". The case can be moved to \"Research\" which means all variants will be made visible for the entire exome. Clicking \"Open research\" will notify the administrators of the site. The user agrees that she is reponsible to have acquired an informed consent relevant for this action. This will also be logged as a new event in the case log. Edit case synopsis : The case sysnopsis can be edited in a format known as [Markdown][markdown]. Just click \"EDIT\" to open the editor view. When you are finished click \"SAVE\" to save changes or \"CANCEL\" to abort. Comment : You can leave comments in the activity log by writing a message in the input box next to the feed. Click \"COMMENT\" to submit the comment. MatchMaker Exchange integration Starting with release 4.4, Scout offers integration for patient data sharing via MatchMaker Exchange. General info about MatchMaker and patient matching could be found in this paper . Authorized users (contact Scout admins if you wish to start sharing cases using this network!) will have access to a MatchMaker submission form present on the case page: Requisites to share patient data using MatchMaker (MME): There must be at least one HPO term specified at the case level AND/OR one pinned variant . A maximum number of 3 variants can be exported to MatchMaker Exchange for a case. Submitting users are willing to be contacted (via email) by users from external MatchMaker nodes in case of positive patient matching. MatchMaker Exchange network discourages the submission of variants which are already known to case a certain phenotype and welcomes instead the submission of novel or unknown but strongly suspected variants for the condition . Patient sharing options Including patient gender is optional Including an HPO term is required if there is no pinned variant at the case level Including OMIM diagnosis is not mandatory, but could be of help to the matching algorithm when looking for similar patients on MME. Submitting users can decide to share specific variant data (chromosome, position, specific change, zygosity) or only gene name . Providing complete information will of course improve matching power. Submitted patients can be modified or removed from MatchMaker any time from the Scout case page. From the same interface, by clicking on 'match against', users will be able to run matches against Scout patients already submitted to MatchMaker or patients present in connected external nodes: By clicking on 'Matches', users can review the submitted data for a case ( Patient Overview tab) and all positive match results for a case against patients from external nodes ( External Matches ) or other Scout patients in MatchMaker server ( Internal Matches ): Matches will be ordered by date and each single match object will display matching patients by score, from the highest (most similar to the case) to the lowest(least similar to the case).","title":"Cases"},{"location":"user-guide/cases/#cases","text":"This page displays the list of active cases for a particular institute. Each item links to the detailed view for that case. You can filter the list by typing into the search box above the list. A quick link to get straight to the list of all clinical variants is also displayed. To indicate what cases have recently been added/updated, a \"last updated\" date is also displayed. Sometimes you will also see a cyan colored dot to the left of the case ID. This is an indicator that there's been some recent activity in the case such as a new comment. Your name will be tagged for each case that is assigned to you. For cases that are assigned to other people you will see a tag \"ASSIGNED\". In the search field you can enter search terms to limit the list displayed. Entering a user name shows only cases assigned to that user. A case- or sample id will return only cases with matches to those ids. A search starting with \"HP:\", e.g. \"HP:0002664\" will return cases with exactly matching HPO phenotype terms . A search starting with \"synopsis:\", e.g. \"synopsis:epilepsy\" will return cases with free text matches to the string following \"synopsis:\".","title":"Cases"},{"location":"user-guide/cases/#case","text":"This is the detailed view of one individual case. The intended use is to give a concise overview of the family under investigation and show recent activity related to the case.","title":"Case"},{"location":"user-guide/cases/#case-report-page","text":"It can be visualized by clicking on the 'Visualize report' link on the left sidebar present on the case view. The case report contains a phenotype info panel as well as an overview of the gene panels used for the analysis. This page is showing also any variant users have been interacting with when working with the case: causative variants, variants pinned as candidates, ACMG or otherwise manually classified variants, as well as variants with any comment field. At the bottom of the report page the 'Dismissed variants' panel lists all variants that have been dismissed, with the reason(s) why they were rejected as candidates. By clicking on the top right button the case report can be exported and saved into a PDF file.","title":"Case report page"},{"location":"user-guide/cases/#pinned-variants","text":"There's a list of \"Strong candidates\" on the page. This list is curated by the collaborators and consists of \"pinned\" variants from the variants list. This feature can be used to mark variants of particular interest that you might want to highlight to other users. Pinned variants for cases with at least one assigned HPO phenotype can be used to produce Clinvar submission files (See more under \"Variant\").","title":"Pinned variants"},{"location":"user-guide/cases/#misc","text":"The case page also displays a simple wiki-style synopsis on the current case that can be used to communicate information on the case to collaborators. Rank model version shows which rank model that has been used to rank the variants in the case The \"Activity\" feed is a reverse chronological list of events and comments related to the case. Examples of events include comments, status updates, assignments, Sanger sequencing orders etc.","title":"Misc."},{"location":"user-guide/cases/#actions","text":"There are a few actions you can take on this page. Adopt case : By clicking the button next to \"Adopt\" you can assign yourself to a case. More than one person can be assigned to a case, e.g. if multiple professions or institutes are involved in analysis. If you have assigned yourself to a case you can click your name to \"unassign\". The case can be moved to \"Research\" which means all variants will be made visible for the entire exome. Clicking \"Open research\" will notify the administrators of the site. The user agrees that she is reponsible to have acquired an informed consent relevant for this action. This will also be logged as a new event in the case log. Edit case synopsis : The case sysnopsis can be edited in a format known as [Markdown][markdown]. Just click \"EDIT\" to open the editor view. When you are finished click \"SAVE\" to save changes or \"CANCEL\" to abort. Comment : You can leave comments in the activity log by writing a message in the input box next to the feed. Click \"COMMENT\" to submit the comment.","title":"Actions"},{"location":"user-guide/cases/#matchmaker-exchange-integration","text":"Starting with release 4.4, Scout offers integration for patient data sharing via MatchMaker Exchange. General info about MatchMaker and patient matching could be found in this paper . Authorized users (contact Scout admins if you wish to start sharing cases using this network!) will have access to a MatchMaker submission form present on the case page:","title":"MatchMaker Exchange integration"},{"location":"user-guide/cases/#requisites-to-share-patient-data-using-matchmaker-mme","text":"There must be at least one HPO term specified at the case level AND/OR one pinned variant . A maximum number of 3 variants can be exported to MatchMaker Exchange for a case. Submitting users are willing to be contacted (via email) by users from external MatchMaker nodes in case of positive patient matching. MatchMaker Exchange network discourages the submission of variants which are already known to case a certain phenotype and welcomes instead the submission of novel or unknown but strongly suspected variants for the condition .","title":"Requisites to share patient data using MatchMaker (MME):"},{"location":"user-guide/cases/#patient-sharing-options","text":"Including patient gender is optional Including an HPO term is required if there is no pinned variant at the case level Including OMIM diagnosis is not mandatory, but could be of help to the matching algorithm when looking for similar patients on MME. Submitting users can decide to share specific variant data (chromosome, position, specific change, zygosity) or only gene name . Providing complete information will of course improve matching power. Submitted patients can be modified or removed from MatchMaker any time from the Scout case page. From the same interface, by clicking on 'match against', users will be able to run matches against Scout patients already submitted to MatchMaker or patients present in connected external nodes: By clicking on 'Matches', users can review the submitted data for a case ( Patient Overview tab) and all positive match results for a case against patients from external nodes ( External Matches ) or other Scout patients in MatchMaker server ( Internal Matches ): Matches will be ordered by date and each single match object will display matching patients by score, from the highest (most similar to the case) to the lowest(least similar to the case).","title":"Patient sharing options"},{"location":"user-guide/dashboard/","text":"Dashboard There is a dashboard available in the top left menu. The purpose of this one is to collect statistics of cases/institutes/variants in scout. The default is to show information for the whole instance. A user can also see specific information for the institute/institutes that they can access. We will here describe in more detail what the numbers mean. Basic statistics Wgs samples The number of samples in all cases that have the analysis tag WGS (Whole Genome Sequencing). Note that there will probably be more samples than cases. Wes samples The number of samples in all cases that have the analysis tag WES (Whole Exome Sequencing). All cases Total number of cases in database Tagged cases The rest of the boxes shows how many cases there are with the different statuses and fraction of all. E.g. if all cases = 100 and 10 are archived the fraction will be 10% Pedigree information Displays how many cases that there are of different family sizes. Everything with more than 3 individuals is grouped into the 'Many' category. Cases with... Some more detailed information about cases. Phenotype terms Number of cases that have at least one phenotype term Similar for the following. Variants Validation ordered Number of variants with validation ordered. This number could be higher that Cases with validation ordered since one case could have multiple variants where validation is ordered. Validated True Positive Number of variants that are validated True positive . Fraction is #True positive /( #True positive + #False positive ) Validated False Positive Similar to the above","title":"Dashboard"},{"location":"user-guide/dashboard/#dashboard","text":"There is a dashboard available in the top left menu. The purpose of this one is to collect statistics of cases/institutes/variants in scout. The default is to show information for the whole instance. A user can also see specific information for the institute/institutes that they can access. We will here describe in more detail what the numbers mean.","title":"Dashboard"},{"location":"user-guide/dashboard/#basic-statistics","text":"","title":"Basic statistics"},{"location":"user-guide/dashboard/#wgs-samples","text":"The number of samples in all cases that have the analysis tag WGS (Whole Genome Sequencing). Note that there will probably be more samples than cases.","title":"Wgs samples"},{"location":"user-guide/dashboard/#wes-samples","text":"The number of samples in all cases that have the analysis tag WES (Whole Exome Sequencing).","title":"Wes samples"},{"location":"user-guide/dashboard/#all-cases","text":"Total number of cases in database","title":"All cases"},{"location":"user-guide/dashboard/#tagged-cases","text":"The rest of the boxes shows how many cases there are with the different statuses and fraction of all. E.g. if all cases = 100 and 10 are archived the fraction will be 10%","title":"Tagged cases"},{"location":"user-guide/dashboard/#pedigree-information","text":"Displays how many cases that there are of different family sizes. Everything with more than 3 individuals is grouped into the 'Many' category.","title":"Pedigree information"},{"location":"user-guide/dashboard/#cases-with","text":"Some more detailed information about cases.","title":"Cases with..."},{"location":"user-guide/dashboard/#phenotype-terms","text":"Number of cases that have at least one phenotype term Similar for the following.","title":"Phenotype terms"},{"location":"user-guide/dashboard/#variants","text":"","title":"Variants"},{"location":"user-guide/dashboard/#validation-ordered","text":"Number of variants with validation ordered. This number could be higher that Cases with validation ordered since one case could have multiple variants where validation is ordered.","title":"Validation ordered"},{"location":"user-guide/dashboard/#validated-true-positive","text":"Number of variants that are validated True positive . Fraction is #True positive /( #True positive + #False positive )","title":"Validated True Positive"},{"location":"user-guide/dashboard/#validated-false-positive","text":"Similar to the above","title":"Validated False Positive"},{"location":"user-guide/defining-scorescheme/","text":"Score scheme How to score a variant is defined in a .ini file wich is written in a specific way. The file is divided in sections, the first section is mandatory and is named Version Version The file has to start with some meta data that looks like: [Version] version = 0.1 name = rank_model_test This is important so the user can backtrack which file that was used for a specific analysis. Categories The Score is built by adding scores from different functions where each function has to belong to a category. The idea with this is that one might not always want to score each function individually, for example if we look at allele frequencies we are most interested in that any of the frequencies are above a certain threshold. If one frequency is low and another high we just want to use the score for the high frequency. A category has a name and a category rule, the different rules are min, max, sum . so this section could look like: [Categories] [[allele_frequency]] category_aggregation = min [[Protein_prediction]] category_aggregation = sum Score functions The following sections in the file will represent score functions. Each function has variables to describe what field in the vcf file that is used, which category it belongs to, what data type we could expect, how the annotation is separated and what the rule is if there are multiple annotations. Example: [FILTER] field = FILTER data_type = string category = Variant_call_quality_filter record_rule = min separators = ';', description = The filters for the variant so the mandatory sections are: field = #Any of the vcf fields data_type = # 'integer','float','flag','character','string' category = # Any of the categories described above record_rule = # min, max separators = # A list of separators If field is INFO we also have to describe what INFO -key to use with info_key = # Any of the info keys","title":"Score scheme"},{"location":"user-guide/defining-scorescheme/#score-scheme","text":"How to score a variant is defined in a .ini file wich is written in a specific way. The file is divided in sections, the first section is mandatory and is named Version","title":"Score scheme"},{"location":"user-guide/defining-scorescheme/#version","text":"The file has to start with some meta data that looks like: [Version] version = 0.1 name = rank_model_test This is important so the user can backtrack which file that was used for a specific analysis.","title":"Version"},{"location":"user-guide/defining-scorescheme/#categories","text":"The Score is built by adding scores from different functions where each function has to belong to a category. The idea with this is that one might not always want to score each function individually, for example if we look at allele frequencies we are most interested in that any of the frequencies are above a certain threshold. If one frequency is low and another high we just want to use the score for the high frequency. A category has a name and a category rule, the different rules are min, max, sum . so this section could look like: [Categories] [[allele_frequency]] category_aggregation = min [[Protein_prediction]] category_aggregation = sum","title":"Categories"},{"location":"user-guide/defining-scorescheme/#score-functions","text":"The following sections in the file will represent score functions. Each function has variables to describe what field in the vcf file that is used, which category it belongs to, what data type we could expect, how the annotation is separated and what the rule is if there are multiple annotations. Example: [FILTER] field = FILTER data_type = string category = Variant_call_quality_filter record_rule = min separators = ';', description = The filters for the variant so the mandatory sections are: field = #Any of the vcf fields data_type = # 'integer','float','flag','character','string' category = # Any of the categories described above record_rule = # min, max separators = # A list of separators If field is INFO we also have to describe what INFO -key to use with info_key = # Any of the info keys","title":"Score functions"},{"location":"user-guide/genes/","text":"Genes and transcripts Scout stores information about genes and transcripts. The information is collected from a couple of resources, these can be updated manually if desired. Definition of what genes that exists and their correct id and symbols are collected from HGNC . Unfortunately HGNC does only maintain a distribution for GRCh38, at this time (mid 2018) there are many resources that lack support for build 38 so many investigators still use build 37. We therefore load two gene sets, one for each build. Genes with missing RefSeq transcripts There is a issue where this problem is discussed here , please read that since it is important. When we first look at all genes we could see the following: Nr of genes: 33578 Nr without transcripts: 11048 So 1/3 of all genes are missing any refseq transcript. This came out as a high number at first, after some thought one might realise that many of these genes are not protein coding etc. If we look at disease causing genes from OMIM there are 16 genes that are missing refseq id for any transcript in ensembl build 37, 7 genes in build 38. The genes in OMIM without refseq transcripts in build 37 are the following: TTC25 PTPRQ SRD5A2 PIGY FGF16 TRAC PADI6 GDF1 TUBB3 IGHG2 IGHM IGKC FCGR2C KMT2B NEFL NR2E3 In the gene panels there are one more gene outside OMIM wihtout refseq transcripts: MAP3K14 We will here look at all these genes in detail: TTC25 Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 HG185_PATCH ENSG00000260703 TTC25 ENST00000569427 - 37 HG185_PATCH ENSG00000260703 TTC25 ENST00000561994 - 37 HG185_PATCH ENSG00000260703 TTC25 ENST00000569541 NM_031421 37 HG185_PATCH ENSG00000260703 TTC25 ENST00000565052 - 37 17 ENSG00000204815 TTC25 ENST00000593239 - 37 17 ENSG00000204815 TTC25 ENST00000591658 - 37 17 ENSG00000204815 TTC25 ENST00000585530 - 37 17 ENSG00000204815 TTC25 ENST00000377540 - --- --- --- --- --- --- 38 17 ENSG00000204815 TTC25 ENST00000593239 - 38 17 ENSG00000204815 TTC25 ENST00000591658 - 38 17 ENSG00000204815 TTC25 ENST00000377540 NM_031421 38 17 ENSG00000204815 TTC25 ENST00000377540 NM_031421 38 17 ENSG00000204815 TTC25 ENST00000585530 - PTPRQ Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 12 ENSG00000139304 PTPRQ ENST00000551042 - 37 12 ENSG00000139304 PTPRQ ENST00000547376 - 37 12 ENSG00000139304 PTPRQ ENST00000551573 - 37 12 ENSG00000139304 PTPRQ ENST00000526956 - 37 12 ENSG00000139304 PTPRQ ENST00000547485 - 37 12 ENSG00000139304 PTPRQ ENST00000551624 - 37 12 ENSG00000139304 PTPRQ ENST00000547881 - 37 12 ENSG00000139304 PTPRQ ENST00000549355 - 37 12 ENSG00000139304 PTPRQ ENST00000266688 - --- --- --- --- --- --- 38 12 ENSG00000139304 PTPRQ ENST00000623635 - 38 12 ENSG00000139304 PTPRQ ENST00000551042 - 38 12 ENSG00000139304 PTPRQ ENST00000547376 - 38 12 ENSG00000139304 PTPRQ ENST00000551573 - 38 12 ENSG00000139304 PTPRQ ENST00000614701 NM_001145026 38 12 ENSG00000139304 PTPRQ ENST00000547485 - 38 12 ENSG00000139304 PTPRQ ENST00000551624 - 38 12 ENSG00000139304 PTPRQ ENST00000547881 - 38 12 ENSG00000139304 PTPRQ ENST00000549355 - 38 12 ENSG00000139304 PTPRQ ENST00000616559 XM_017019274 SRD5A2 Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 2 ENSG00000049319 SRD5A2 ENST00000405650 - 37 2 ENSG00000049319 SRD5A2 ENST00000233139 - --- --- --- --- --- --- 38 2 ENSG00000277893 SRD5A2 ENST00000622030 NM_000348 Here we can see that two transcripts has been merged to one and been given a refseq identifier. Most probable one of the old transcripts match the new one. We can not be sure if variants are missed here. PIGY Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 4 ENSG00000255072 PIGY ENST00000527353 - --- --- --- --- --- --- 38 4 ENSG00000255072 PIGY ENST00000527353 - Here the transcript is identical for both builds so we dear to guess that we do not miss any variants. FGF16 Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 X ENSG00000196468 FGF16 ENST00000439435 - 37 HG1426_PATCH ENSG00000268853 FGF16 ENST00000600602 - --- --- --- --- --- --- 38 X ENSG00000196468 FGF16 ENST00000439435 NM_003868 The refseq transcript exists in build 37 but is missing the refseq identifier. We would NOT miss any variants here. TRAC Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 14 ENSG00000229164 TRAC ENST00000478163 - --- --- --- --- --- --- 38 14 ENSG00000277734 TRAC ENST00000611116 - Transcripts have different ENS ids in both builds but are most probably the same. No refseq identifier for any build. PADI6 Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 1 ENSG00000256049 PADI6 ENST00000434762 - 37 1 ENSG00000256049 PADI6 ENST00000358481 - --- --- --- --- --- --- 38 1 ENSG00000276747 PADI6 ENST00000619609 NM_207421 38 CHR_HG2095_PATCH ENSG00000280949 PADI6 ENST00000625380 NM_207421 Unclear what happens here... GDF1 Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 19 ENSG00000130283 GDF1 ENST00000247005 - --- --- --- --- --- --- 38 19 ENSG00000130283 GDF1 ENST00000247005 - Same transcripts, no refseq in both builds. No variants will be missed here TUBB3 Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 16 ENSG00000198211 TUBB3 ENST00000556922 - --- --- --- --- --- --- 38 16 ENSG00000258947 TUBB3 ENST00000555810 - 38 16 ENSG00000258947 TUBB3 ENST00000554444 NM_001197181 38 16 ENSG00000258947 TUBB3 ENST00000556565 - 38 16 ENSG00000258947 TUBB3 ENST00000315491 NM_006086 38 16 ENSG00000258947 TUBB3 ENST00000553656 - 38 16 ENSG00000258947 TUBB3 ENST00000556536 - 38 16 ENSG00000258947 TUBB3 ENST00000554116 - 38 16 ENSG00000258947 TUBB3 ENST00000554927 - 38 16 ENSG00000258947 TUBB3 ENST00000557262 - 38 16 ENSG00000258947 TUBB3 ENST00000557490 - 38 16 ENSG00000258947 TUBB3 ENST00000555576 - 38 16 ENSG00000258947 TUBB3 ENST00000554336 - 38 16 ENSG00000258947 TUBB3 ENST00000555609 - 38 16 ENSG00000258947 TUBB3 ENST00000553967 - 38 16 ENSG00000258947 TUBB3 ENST00000625617 - This is very unclear, it goes from one to many transcripts between the builds. Hard to say if variants are missed here. IGHG2 Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 14 ENSG00000211893 IGHG2 ENST00000390545 - 37 HG1592_PATCH ENSG00000270895 IGHG2 ENST00000603473 --- --- --- --- --- --- 38 CHR_HSCHR14_3_CTG1 ENSG00000274497 IGHG2 ENST00000621803 - 38 14 ENSG00000211893 IGHG2 ENST00000641095 - 38 14 ENSG00000211893 IGHG2 ENST00000390545 - No refseq in any build. Same transcripts in both builds except a new one in a patch. No variants would be missed here. IGHM Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 14 ENSG00000211899 IGHM ENST00000390559 - 37 HG1592_PATCH ENSG00000271541 IGHM ENST00000605693 - --- --- --- --- --- --- 37 CHR_HSCHR14_3_CTG1 ENSG00000282657 IGHM ENST00000626472 - 37 14 ENSG00000211899 IGHM ENST00000637539 - 37 14 ENSG00000211899 IGHM ENST00000390559 - Same as above, no variants missing here IGKC Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 2 ENSG00000211592 IGKC ENST00000390237 - --- --- --- --- --- --- 38 2 ENSG00000211592 IGKC ENST00000390237 - Same in both builds. No variants would be missing here FCGR2C Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 1 ENSG00000244682 FCGR2C ENST00000502411 - 37 1 ENSG00000244682 FCGR2C ENST00000496692 - 37 1 ENSG00000244682 FCGR2C ENST00000466542 - 37 1 ENSG00000244682 FCGR2C ENST00000465075 - 37 1 ENSG00000244682 FCGR2C ENST00000473530 - 37 1 ENSG00000244682 FCGR2C ENST00000473712 - 37 1 ENSG00000244682 FCGR2C ENST00000482226 - 37 1 ENSG00000244682 FCGR2C ENST00000467903 - 37 1 ENSG00000244682 FCGR2C ENST00000507374 - 37 1 ENSG00000244682 FCGR2C ENST00000508651 - 37 1 ENSG00000244682 FCGR2C ENST00000543859 - --- --- --- --- --- --- 38 1 ENSG00000244682 FCGR2C ENST00000502411 - 38 1 ENSG00000244682 FCGR2C ENST00000496692 - 38 1 ENSG00000244682 FCGR2C ENST00000466542 - 38 1 ENSG00000244682 FCGR2C ENST00000465075 - 38 1 ENSG00000244682 FCGR2C ENST00000473530 - 38 1 ENSG00000244682 FCGR2C ENST00000473712 - 38 1 ENSG00000244682 FCGR2C ENST00000482226 - 38 1 ENSG00000244682 FCGR2C ENST00000467903 - 38 1 ENSG00000244682 FCGR2C ENST00000507374 - 38 1 ENSG00000244682 FCGR2C ENST00000508651 - 38 1 ENSG00000244682 FCGR2C ENST00000611236 - 38 1 ENSG00000244682 FCGR2C ENST00000543859 NR_047648 Most probably no variants would be missing here. All transcripts seems to be correct between the builds. KMT2B Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 19 ENSG00000105663 KMT2B ENST00000606995 - 37 19 ENSG00000105663 KMT2B ENST00000607650 - 37 19 ENSG00000105663 KMT2B ENST00000592092 - 37 19 ENSG00000105663 KMT2B ENST00000585476 - 37 19 ENSG00000105663 KMT2B ENST00000586308 - --- --- --- --- --- --- 38 19 ENSG00000272333 KMT2B ENST00000420124 NM_014727 38 19 ENSG00000272333 KMT2B ENST00000606995 - 38 19 ENSG00000272333 KMT2B ENST00000592092 - 38 19 ENSG00000272333 KMT2B ENST00000585476 - 38 19 ENSG00000272333 KMT2B ENST00000586308 - Here the transcript ENST00000607650 in build 37 have probably changed id to ENST00000420124 and been given a refseq identifier. NEFL Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 8 ENSG00000104725 NEFL ENST00000221169 - --- --- --- --- --- --- 38 8 ENSG00000277586 NEFL ENST00000610854 NM_006158 38 8 ENSG00000277586 NEFL ENST00000615973 - 38 8 ENSG00000277586 NEFL ENST00000639464 - 38 8 ENSG00000277586 NEFL ENST00000619417 - This is unclear, probably ENST00000221169 has been renamed to ENST00000610854 and been given a refseq identifier. NR2E3 Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 15 ENSG00000031544 NR2E3 ENST00000561604 - 37 15 ENSG00000031544 NR2E3 ENST00000567496 - 37 15 ENSG00000031544 NR2E3 ENST00000562839 - 37 15 ENSG00000031544 NR2E3 ENST00000562925 - 37 15 ENSG00000031544 NR2E3 ENST00000563709 - 37 15 ENSG00000031544 NR2E3 ENST00000398840 - 37 15 ENSG00000031544 NR2E3 ENST00000326995 - --- --- --- --- --- --- 38 15 ENSG00000278570 NR2E3 ENST00000621736 - 38 15 ENSG00000278570 NR2E3 ENST00000617575 NM_014249 38 15 ENSG00000278570 NR2E3 ENST00000621098 NM_016346 38 15 ENSG00000278570 NR2E3 ENST00000563709 - This is unclear. We might miss variants here MAP3K14 Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 17 ENSG00000006062 MAP3K14 ENST00000587332 - 37 17 ENSG00000006062 MAP3K14 ENST00000592267 - 37 17 ENSG00000006062 MAP3K14 ENST00000586644 - 37 17 ENSG00000006062 MAP3K14 ENST00000344686 - 37 17 ENSG00000006062 MAP3K14 ENST00000376926 - --- --- --- --- --- --- 38 17 ENSG00000006062 MAP3K14 ENST00000344686 NM_003954 38 17 ENSG00000006062 MAP3K14 ENST00000640087 - 38 17 ENSG00000006062 MAP3K14 ENST00000592267 - 38 17 ENSG00000006062 MAP3K14 ENST00000586644 - 38 17 ENSG00000006062 MAP3K14 ENST00000617331 - 38 17 ENSG00000006062 MAP3K14 ENST00000376926 - 38 CHR_HSCHR17_2_CTG5 ENSG00000282637 MAP3K14 ENST00000633437 - 38 CHR_HSCHR17_2_CTG5 ENSG00000282637 MAP3K14 ENST00000634016 - Here one of the transcripts have been given a refseq identifier in build 38, that transcript exists in build 37 so no variants would be missed here.","title":"Genes"},{"location":"user-guide/genes/#genes-and-transcripts","text":"Scout stores information about genes and transcripts. The information is collected from a couple of resources, these can be updated manually if desired. Definition of what genes that exists and their correct id and symbols are collected from HGNC . Unfortunately HGNC does only maintain a distribution for GRCh38, at this time (mid 2018) there are many resources that lack support for build 38 so many investigators still use build 37. We therefore load two gene sets, one for each build.","title":"Genes and transcripts"},{"location":"user-guide/genes/#genes-with-missing-refseq-transcripts","text":"There is a issue where this problem is discussed here , please read that since it is important. When we first look at all genes we could see the following: Nr of genes: 33578 Nr without transcripts: 11048 So 1/3 of all genes are missing any refseq transcript. This came out as a high number at first, after some thought one might realise that many of these genes are not protein coding etc. If we look at disease causing genes from OMIM there are 16 genes that are missing refseq id for any transcript in ensembl build 37, 7 genes in build 38. The genes in OMIM without refseq transcripts in build 37 are the following: TTC25 PTPRQ SRD5A2 PIGY FGF16 TRAC PADI6 GDF1 TUBB3 IGHG2 IGHM IGKC FCGR2C KMT2B NEFL NR2E3 In the gene panels there are one more gene outside OMIM wihtout refseq transcripts: MAP3K14 We will here look at all these genes in detail:","title":"Genes with missing RefSeq transcripts"},{"location":"user-guide/genes/#ttc25","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 HG185_PATCH ENSG00000260703 TTC25 ENST00000569427 - 37 HG185_PATCH ENSG00000260703 TTC25 ENST00000561994 - 37 HG185_PATCH ENSG00000260703 TTC25 ENST00000569541 NM_031421 37 HG185_PATCH ENSG00000260703 TTC25 ENST00000565052 - 37 17 ENSG00000204815 TTC25 ENST00000593239 - 37 17 ENSG00000204815 TTC25 ENST00000591658 - 37 17 ENSG00000204815 TTC25 ENST00000585530 - 37 17 ENSG00000204815 TTC25 ENST00000377540 - --- --- --- --- --- --- 38 17 ENSG00000204815 TTC25 ENST00000593239 - 38 17 ENSG00000204815 TTC25 ENST00000591658 - 38 17 ENSG00000204815 TTC25 ENST00000377540 NM_031421 38 17 ENSG00000204815 TTC25 ENST00000377540 NM_031421 38 17 ENSG00000204815 TTC25 ENST00000585530 -","title":"TTC25"},{"location":"user-guide/genes/#ptprq","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 12 ENSG00000139304 PTPRQ ENST00000551042 - 37 12 ENSG00000139304 PTPRQ ENST00000547376 - 37 12 ENSG00000139304 PTPRQ ENST00000551573 - 37 12 ENSG00000139304 PTPRQ ENST00000526956 - 37 12 ENSG00000139304 PTPRQ ENST00000547485 - 37 12 ENSG00000139304 PTPRQ ENST00000551624 - 37 12 ENSG00000139304 PTPRQ ENST00000547881 - 37 12 ENSG00000139304 PTPRQ ENST00000549355 - 37 12 ENSG00000139304 PTPRQ ENST00000266688 - --- --- --- --- --- --- 38 12 ENSG00000139304 PTPRQ ENST00000623635 - 38 12 ENSG00000139304 PTPRQ ENST00000551042 - 38 12 ENSG00000139304 PTPRQ ENST00000547376 - 38 12 ENSG00000139304 PTPRQ ENST00000551573 - 38 12 ENSG00000139304 PTPRQ ENST00000614701 NM_001145026 38 12 ENSG00000139304 PTPRQ ENST00000547485 - 38 12 ENSG00000139304 PTPRQ ENST00000551624 - 38 12 ENSG00000139304 PTPRQ ENST00000547881 - 38 12 ENSG00000139304 PTPRQ ENST00000549355 - 38 12 ENSG00000139304 PTPRQ ENST00000616559 XM_017019274","title":"PTPRQ"},{"location":"user-guide/genes/#srd5a2","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 2 ENSG00000049319 SRD5A2 ENST00000405650 - 37 2 ENSG00000049319 SRD5A2 ENST00000233139 - --- --- --- --- --- --- 38 2 ENSG00000277893 SRD5A2 ENST00000622030 NM_000348 Here we can see that two transcripts has been merged to one and been given a refseq identifier. Most probable one of the old transcripts match the new one. We can not be sure if variants are missed here.","title":"SRD5A2"},{"location":"user-guide/genes/#pigy","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 4 ENSG00000255072 PIGY ENST00000527353 - --- --- --- --- --- --- 38 4 ENSG00000255072 PIGY ENST00000527353 - Here the transcript is identical for both builds so we dear to guess that we do not miss any variants.","title":"PIGY"},{"location":"user-guide/genes/#fgf16","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 X ENSG00000196468 FGF16 ENST00000439435 - 37 HG1426_PATCH ENSG00000268853 FGF16 ENST00000600602 - --- --- --- --- --- --- 38 X ENSG00000196468 FGF16 ENST00000439435 NM_003868 The refseq transcript exists in build 37 but is missing the refseq identifier. We would NOT miss any variants here.","title":"FGF16"},{"location":"user-guide/genes/#trac","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 14 ENSG00000229164 TRAC ENST00000478163 - --- --- --- --- --- --- 38 14 ENSG00000277734 TRAC ENST00000611116 - Transcripts have different ENS ids in both builds but are most probably the same. No refseq identifier for any build.","title":"TRAC"},{"location":"user-guide/genes/#padi6","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 1 ENSG00000256049 PADI6 ENST00000434762 - 37 1 ENSG00000256049 PADI6 ENST00000358481 - --- --- --- --- --- --- 38 1 ENSG00000276747 PADI6 ENST00000619609 NM_207421 38 CHR_HG2095_PATCH ENSG00000280949 PADI6 ENST00000625380 NM_207421 Unclear what happens here...","title":"PADI6"},{"location":"user-guide/genes/#gdf1","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 19 ENSG00000130283 GDF1 ENST00000247005 - --- --- --- --- --- --- 38 19 ENSG00000130283 GDF1 ENST00000247005 - Same transcripts, no refseq in both builds. No variants will be missed here","title":"GDF1"},{"location":"user-guide/genes/#tubb3","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 16 ENSG00000198211 TUBB3 ENST00000556922 - --- --- --- --- --- --- 38 16 ENSG00000258947 TUBB3 ENST00000555810 - 38 16 ENSG00000258947 TUBB3 ENST00000554444 NM_001197181 38 16 ENSG00000258947 TUBB3 ENST00000556565 - 38 16 ENSG00000258947 TUBB3 ENST00000315491 NM_006086 38 16 ENSG00000258947 TUBB3 ENST00000553656 - 38 16 ENSG00000258947 TUBB3 ENST00000556536 - 38 16 ENSG00000258947 TUBB3 ENST00000554116 - 38 16 ENSG00000258947 TUBB3 ENST00000554927 - 38 16 ENSG00000258947 TUBB3 ENST00000557262 - 38 16 ENSG00000258947 TUBB3 ENST00000557490 - 38 16 ENSG00000258947 TUBB3 ENST00000555576 - 38 16 ENSG00000258947 TUBB3 ENST00000554336 - 38 16 ENSG00000258947 TUBB3 ENST00000555609 - 38 16 ENSG00000258947 TUBB3 ENST00000553967 - 38 16 ENSG00000258947 TUBB3 ENST00000625617 - This is very unclear, it goes from one to many transcripts between the builds. Hard to say if variants are missed here.","title":"TUBB3"},{"location":"user-guide/genes/#ighg2","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 14 ENSG00000211893 IGHG2 ENST00000390545 - 37 HG1592_PATCH ENSG00000270895 IGHG2 ENST00000603473 --- --- --- --- --- --- 38 CHR_HSCHR14_3_CTG1 ENSG00000274497 IGHG2 ENST00000621803 - 38 14 ENSG00000211893 IGHG2 ENST00000641095 - 38 14 ENSG00000211893 IGHG2 ENST00000390545 - No refseq in any build. Same transcripts in both builds except a new one in a patch. No variants would be missed here.","title":"IGHG2"},{"location":"user-guide/genes/#ighm","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 14 ENSG00000211899 IGHM ENST00000390559 - 37 HG1592_PATCH ENSG00000271541 IGHM ENST00000605693 - --- --- --- --- --- --- 37 CHR_HSCHR14_3_CTG1 ENSG00000282657 IGHM ENST00000626472 - 37 14 ENSG00000211899 IGHM ENST00000637539 - 37 14 ENSG00000211899 IGHM ENST00000390559 - Same as above, no variants missing here","title":"IGHM"},{"location":"user-guide/genes/#igkc","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 2 ENSG00000211592 IGKC ENST00000390237 - --- --- --- --- --- --- 38 2 ENSG00000211592 IGKC ENST00000390237 - Same in both builds. No variants would be missing here","title":"IGKC"},{"location":"user-guide/genes/#fcgr2c","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 1 ENSG00000244682 FCGR2C ENST00000502411 - 37 1 ENSG00000244682 FCGR2C ENST00000496692 - 37 1 ENSG00000244682 FCGR2C ENST00000466542 - 37 1 ENSG00000244682 FCGR2C ENST00000465075 - 37 1 ENSG00000244682 FCGR2C ENST00000473530 - 37 1 ENSG00000244682 FCGR2C ENST00000473712 - 37 1 ENSG00000244682 FCGR2C ENST00000482226 - 37 1 ENSG00000244682 FCGR2C ENST00000467903 - 37 1 ENSG00000244682 FCGR2C ENST00000507374 - 37 1 ENSG00000244682 FCGR2C ENST00000508651 - 37 1 ENSG00000244682 FCGR2C ENST00000543859 - --- --- --- --- --- --- 38 1 ENSG00000244682 FCGR2C ENST00000502411 - 38 1 ENSG00000244682 FCGR2C ENST00000496692 - 38 1 ENSG00000244682 FCGR2C ENST00000466542 - 38 1 ENSG00000244682 FCGR2C ENST00000465075 - 38 1 ENSG00000244682 FCGR2C ENST00000473530 - 38 1 ENSG00000244682 FCGR2C ENST00000473712 - 38 1 ENSG00000244682 FCGR2C ENST00000482226 - 38 1 ENSG00000244682 FCGR2C ENST00000467903 - 38 1 ENSG00000244682 FCGR2C ENST00000507374 - 38 1 ENSG00000244682 FCGR2C ENST00000508651 - 38 1 ENSG00000244682 FCGR2C ENST00000611236 - 38 1 ENSG00000244682 FCGR2C ENST00000543859 NR_047648 Most probably no variants would be missing here. All transcripts seems to be correct between the builds.","title":"FCGR2C"},{"location":"user-guide/genes/#kmt2b","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 19 ENSG00000105663 KMT2B ENST00000606995 - 37 19 ENSG00000105663 KMT2B ENST00000607650 - 37 19 ENSG00000105663 KMT2B ENST00000592092 - 37 19 ENSG00000105663 KMT2B ENST00000585476 - 37 19 ENSG00000105663 KMT2B ENST00000586308 - --- --- --- --- --- --- 38 19 ENSG00000272333 KMT2B ENST00000420124 NM_014727 38 19 ENSG00000272333 KMT2B ENST00000606995 - 38 19 ENSG00000272333 KMT2B ENST00000592092 - 38 19 ENSG00000272333 KMT2B ENST00000585476 - 38 19 ENSG00000272333 KMT2B ENST00000586308 - Here the transcript ENST00000607650 in build 37 have probably changed id to ENST00000420124 and been given a refseq identifier.","title":"KMT2B"},{"location":"user-guide/genes/#nefl","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 8 ENSG00000104725 NEFL ENST00000221169 - --- --- --- --- --- --- 38 8 ENSG00000277586 NEFL ENST00000610854 NM_006158 38 8 ENSG00000277586 NEFL ENST00000615973 - 38 8 ENSG00000277586 NEFL ENST00000639464 - 38 8 ENSG00000277586 NEFL ENST00000619417 - This is unclear, probably ENST00000221169 has been renamed to ENST00000610854 and been given a refseq identifier.","title":"NEFL"},{"location":"user-guide/genes/#nr2e3","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 15 ENSG00000031544 NR2E3 ENST00000561604 - 37 15 ENSG00000031544 NR2E3 ENST00000567496 - 37 15 ENSG00000031544 NR2E3 ENST00000562839 - 37 15 ENSG00000031544 NR2E3 ENST00000562925 - 37 15 ENSG00000031544 NR2E3 ENST00000563709 - 37 15 ENSG00000031544 NR2E3 ENST00000398840 - 37 15 ENSG00000031544 NR2E3 ENST00000326995 - --- --- --- --- --- --- 38 15 ENSG00000278570 NR2E3 ENST00000621736 - 38 15 ENSG00000278570 NR2E3 ENST00000617575 NM_014249 38 15 ENSG00000278570 NR2E3 ENST00000621098 NM_016346 38 15 ENSG00000278570 NR2E3 ENST00000563709 - This is unclear. We might miss variants here","title":"NR2E3"},{"location":"user-guide/genes/#map3k14","text":"Build Chrom EnsGeneID Gene Name EnsTransID RefSeq mRNA 37 17 ENSG00000006062 MAP3K14 ENST00000587332 - 37 17 ENSG00000006062 MAP3K14 ENST00000592267 - 37 17 ENSG00000006062 MAP3K14 ENST00000586644 - 37 17 ENSG00000006062 MAP3K14 ENST00000344686 - 37 17 ENSG00000006062 MAP3K14 ENST00000376926 - --- --- --- --- --- --- 38 17 ENSG00000006062 MAP3K14 ENST00000344686 NM_003954 38 17 ENSG00000006062 MAP3K14 ENST00000640087 - 38 17 ENSG00000006062 MAP3K14 ENST00000592267 - 38 17 ENSG00000006062 MAP3K14 ENST00000586644 - 38 17 ENSG00000006062 MAP3K14 ENST00000617331 - 38 17 ENSG00000006062 MAP3K14 ENST00000376926 - 38 CHR_HSCHR17_2_CTG5 ENSG00000282637 MAP3K14 ENST00000633437 - 38 CHR_HSCHR17_2_CTG5 ENSG00000282637 MAP3K14 ENST00000634016 - Here one of the transcripts have been given a refseq identifier in build 38, that transcript exists in build 37 so no variants would be missed here.","title":"MAP3K14"},{"location":"user-guide/getting-started/","text":"Getting started with Scout Scout is a web-based visualizer for VCF-files. It helps to manage multiple patient cases in a unified and intuitive interface. Users can collaborate with other clinicians sharing comments and findings across your team. Institutes, Cases, Variants Scout has a few levels of abstraction to deal with the data it presents. Institutes contain multiple cases and group users into teams. Cases are a unit that is analysed together, usually the same as a family or a tumor/normal sample - they all share a subset of called variants. Variants are individual genotype calls across a single case. [insert screenshot here] A case is an interesting concept worth expanding on. Given the context of diagnosing a Mendelian disorder, a case represents the investigation of typically a single family and the quest to find a single disease causing mutation. As such there are some added features that try to support this process: a case can be assigned to a user to delegate responsibility various variants can be pinned as worth looking at for the whole team a feed keeps track of any case related activity in one single place A lot of time has been spent on the layout for the big list of variants as well as the single variant detail view. They are meant to give a quick overview to enable efficient scanning of the information. It is also in this direction they will evolve in the future.","title":"Getting started"},{"location":"user-guide/getting-started/#getting-started-with-scout","text":"Scout is a web-based visualizer for VCF-files. It helps to manage multiple patient cases in a unified and intuitive interface. Users can collaborate with other clinicians sharing comments and findings across your team.","title":"Getting started with Scout"},{"location":"user-guide/getting-started/#institutes-cases-variants","text":"Scout has a few levels of abstraction to deal with the data it presents. Institutes contain multiple cases and group users into teams. Cases are a unit that is analysed together, usually the same as a family or a tumor/normal sample - they all share a subset of called variants. Variants are individual genotype calls across a single case. [insert screenshot here] A case is an interesting concept worth expanding on. Given the context of diagnosing a Mendelian disorder, a case represents the investigation of typically a single family and the quest to find a single disease causing mutation. As such there are some added features that try to support this process: a case can be assigned to a user to delegate responsibility various variants can be pinned as worth looking at for the whole team a feed keeps track of any case related activity in one single place A lot of time has been spent on the layout for the big list of variants as well as the single variant detail view. They are meant to give a quick overview to enable efficient scanning of the information. It is also in this direction they will evolve in the future.","title":"Institutes, Cases, Variants"},{"location":"user-guide/institutes/","text":"Institutes Scout was made as a centralized tool where multiple users from different customers could work against the same instance. Institutes is a way to separate sensitive information from the users. Each case has to have a institute as owner. A user belongs to an institute and in that way restricted to see only the cases owned by that institute. So one instance of scout can have one or many institutes. Each institute could be the owner of multiple cases and have multiple users attached. Each institute has to have a unique identifier, institute_id .","title":"Institutes"},{"location":"user-guide/institutes/#institutes","text":"Scout was made as a centralized tool where multiple users from different customers could work against the same instance. Institutes is a way to separate sensitive information from the users. Each case has to have a institute as owner. A user belongs to an institute and in that way restricted to see only the cases owned by that institute. So one instance of scout can have one or many institutes. Each institute could be the owner of multiple cases and have multiple users attached. Each institute has to have a unique identifier, institute_id .","title":"Institutes"},{"location":"user-guide/pages/","text":"Pages Scout can be logically separated into a number of pages with different responsibility and purpose. The core pages include institues, cases, case, variants, and variant. This document describes each page, it's purpose, function, and intended use. Index The \"landing page\". This is your default view where all users who aren't logged in will arrive at. It's main purpose is to introduce potentially new users to the website. It also allows you to sign in. Sign up New users have to apply for access prior to logging in the first time. The team leaders for each institute are required to sign off on new users. Sign in We have chosen to use Google OAuth for the signup process. This means that you click on a button on the first page which launches the OAuth process. When the user is returned, you will see your customized welcome page. We also use separate @clinicalgenomics.se accounts to be able to enforce 2-factor authentication. Welcome page This is the first page a you see after logging in. Notice your first name in the upper right corner. You can also access the list of institutes you belong to. Institute selection Users can belong to multiple institutes. Each institutes defines what cases can be viewed by the user. If you only belong to a single institute you will be redirected automatically to Cases . Cases page An overview of the cases that belongs to an institute and status for the cases. Variants page A list of the variants with some relevant information. Variants are grouped into SNVs, SVs, and STRs. Variants can have a separate clinical and research list. A cancer / somatic variant view is also available. Detailed variant page When choosing a variant the detailed variant information is displayed Gene Panels Page to investigate and manipulating gene panels .","title":"Pages"},{"location":"user-guide/pages/#pages","text":"Scout can be logically separated into a number of pages with different responsibility and purpose. The core pages include institues, cases, case, variants, and variant. This document describes each page, it's purpose, function, and intended use.","title":"Pages"},{"location":"user-guide/pages/#index","text":"The \"landing page\". This is your default view where all users who aren't logged in will arrive at. It's main purpose is to introduce potentially new users to the website. It also allows you to sign in.","title":"Index"},{"location":"user-guide/pages/#sign-up","text":"New users have to apply for access prior to logging in the first time. The team leaders for each institute are required to sign off on new users.","title":"Sign up"},{"location":"user-guide/pages/#sign-in","text":"We have chosen to use Google OAuth for the signup process. This means that you click on a button on the first page which launches the OAuth process. When the user is returned, you will see your customized welcome page. We also use separate @clinicalgenomics.se accounts to be able to enforce 2-factor authentication.","title":"Sign in"},{"location":"user-guide/pages/#welcome-page","text":"This is the first page a you see after logging in. Notice your first name in the upper right corner. You can also access the list of institutes you belong to.","title":"Welcome page"},{"location":"user-guide/pages/#institute-selection","text":"Users can belong to multiple institutes. Each institutes defines what cases can be viewed by the user. If you only belong to a single institute you will be redirected automatically to Cases .","title":"Institute selection"},{"location":"user-guide/pages/#cases-page","text":"An overview of the cases that belongs to an institute and status for the cases.","title":"Cases page"},{"location":"user-guide/pages/#variants-page","text":"A list of the variants with some relevant information. Variants are grouped into SNVs, SVs, and STRs. Variants can have a separate clinical and research list. A cancer / somatic variant view is also available.","title":"Variants page"},{"location":"user-guide/pages/#detailed-variant-page","text":"When choosing a variant the detailed variant information is displayed","title":"Detailed variant page"},{"location":"user-guide/pages/#gene-panels","text":"Page to investigate and manipulating gene panels .","title":"Gene Panels"},{"location":"user-guide/panels/","text":"Gene Panels This page describes gene panels, how they are annotated and how they are used in scout. General Scout is developed to be used in a clinical setting and therefore gene panels is a central concept. The gene panels describes a set of genes with additional information that is often associated with a disease or a disease group. A case can then be associated with one or several gene panels. File format The gene panel is a tab separated text file with a header that describes the columns and one line for each gene entry. The columns that will be used by scout is the following: hgnc_id(int) This identifies the gene. Mandatory hgnc_symbol(str) This is used for sanity check when humans look at the file. Optional disease_associated_transcripts(str) ','-separated list of manually curated transcripts. Optional genetic_disease_models(str) ','-separated list of manually curated inheritance patterns that are followed for a gene. Optional mosaicism(str) If a gene is known to be associated with mosaicism this is annotated. Optional reduced_penetrance(str) If a gene is known to have reduced penetrance this is annotated. Optional database_entry_version(str) The database entry version is a way to track when a a gene was added or modified. Optional Each gene in a gene panel have to be identified with a hgnc id File format 2 There is also an option to include all information about a panel in the header of the file. This could make uploading easier, just a matter of taste. In this case include a header with metadata, each of these lines are key-value separated by = . The meta data lines should start with ## Example: ##panel_id=panel1 ##institute=cust000 ##version=1.0 ##date=2016-12-09 ##display_name=Test panel #hgnc_id hgnc_symbol 7481 MT-TF ... ... ... Notes on entries hgnc_id : This one have to be a valid hgnc id that exists in scout genetic_disease_models can be anyone in [AR,AD,XR,XD,MT,X,Y] mosaicism Any entry here will be interpreted as true reduced_penetrance Any entry here will be interpreted as true database_entry_version This should refer to a earlier version of the panel Uploading a new gene panel version You can upload a text file in Scout to update an existing gene panel. It should follow the format specified in this file: panel-example . The file is ; (semi-colon) separated, could also be tab separated. You can also use this example Excel template as a starting point. When you are ready to update the gene panel simply: choose \"Save as...\" in Excel and select \"Comma Separated Values (.csv)\" as the format fill out the form in Scout and upload the \"*.csv\" file to update your gene panel Upload from interface Choose the menu in top left corner, click Gene Panel . Then under 'new panel' the user can point to a csv file and fill in name and display name. Upload with CLI When uploading from CLI there are more options. Use scout load panel --help for more information.","title":"Gene panels"},{"location":"user-guide/panels/#gene-panels","text":"This page describes gene panels, how they are annotated and how they are used in scout.","title":"Gene Panels"},{"location":"user-guide/panels/#general","text":"Scout is developed to be used in a clinical setting and therefore gene panels is a central concept. The gene panels describes a set of genes with additional information that is often associated with a disease or a disease group. A case can then be associated with one or several gene panels.","title":"General"},{"location":"user-guide/panels/#file-format","text":"The gene panel is a tab separated text file with a header that describes the columns and one line for each gene entry. The columns that will be used by scout is the following: hgnc_id(int) This identifies the gene. Mandatory hgnc_symbol(str) This is used for sanity check when humans look at the file. Optional disease_associated_transcripts(str) ','-separated list of manually curated transcripts. Optional genetic_disease_models(str) ','-separated list of manually curated inheritance patterns that are followed for a gene. Optional mosaicism(str) If a gene is known to be associated with mosaicism this is annotated. Optional reduced_penetrance(str) If a gene is known to have reduced penetrance this is annotated. Optional database_entry_version(str) The database entry version is a way to track when a a gene was added or modified. Optional Each gene in a gene panel have to be identified with a hgnc id","title":"File format"},{"location":"user-guide/panels/#file-format-2","text":"There is also an option to include all information about a panel in the header of the file. This could make uploading easier, just a matter of taste. In this case include a header with metadata, each of these lines are key-value separated by = . The meta data lines should start with ## Example: ##panel_id=panel1 ##institute=cust000 ##version=1.0 ##date=2016-12-09 ##display_name=Test panel #hgnc_id hgnc_symbol 7481 MT-TF ... ... ...","title":"File format 2"},{"location":"user-guide/panels/#notes-on-entries","text":"hgnc_id : This one have to be a valid hgnc id that exists in scout genetic_disease_models can be anyone in [AR,AD,XR,XD,MT,X,Y] mosaicism Any entry here will be interpreted as true reduced_penetrance Any entry here will be interpreted as true database_entry_version This should refer to a earlier version of the panel","title":"Notes on entries"},{"location":"user-guide/panels/#uploading-a-new-gene-panel-version","text":"You can upload a text file in Scout to update an existing gene panel. It should follow the format specified in this file: panel-example . The file is ; (semi-colon) separated, could also be tab separated. You can also use this example Excel template as a starting point. When you are ready to update the gene panel simply: choose \"Save as...\" in Excel and select \"Comma Separated Values (.csv)\" as the format fill out the form in Scout and upload the \"*.csv\" file to update your gene panel","title":"Uploading a new gene panel version"},{"location":"user-guide/panels/#upload-from-interface","text":"Choose the menu in top left corner, click Gene Panel . Then under 'new panel' the user can point to a csv file and fill in name and display name.","title":"Upload from interface"},{"location":"user-guide/panels/#upload-with-cli","text":"When uploading from CLI there are more options. Use scout load panel --help for more information.","title":"Upload with CLI"},{"location":"user-guide/users/","text":"Users A user represents an individual with access to all cases that belongs to the same institute(s) that the user does. From the main menu in scout one can access a users page that displays all existing users in the scout instance and ranks them based on how many actions they have performed. Create a user Users are created through the CLI with command scout load user , please se the --help argument for more information. Email is used as user identification, a user can be admin which means that they have access to all institutes in the instance. Example: >scout load user --user-mail john@doe.com --admin --institute-id cust000 --user-name \"John Doe\" A user can also have access to multiple institutes without being admin. Example: >scout load user -m john@doe.com -i cust000 -i cust001 -u \"John Doe\" Delete a user Users can be deleted from the CLI. Example: >scout delete user --mail john@doe.com Update a user It is possible to update existing users from the command line. It is possible to add or remove admin rights and to add or remove access to institutes. Examples: Give admin rights >scout update user -u john@doe.com --update-role admin Remove admin rights >scout update user -u john@doe.com --remove-admin Add access to institutes Institutes has to exist in database >scout update user -u john@doe.com --add-institute cust003 --add-institute cust004 Remove access from institutes >scout update user -u john@doe.com --remove-institute cust001 --remove-institute cust002","title":"Users"},{"location":"user-guide/users/#users","text":"A user represents an individual with access to all cases that belongs to the same institute(s) that the user does. From the main menu in scout one can access a users page that displays all existing users in the scout instance and ranks them based on how many actions they have performed.","title":"Users"},{"location":"user-guide/users/#create-a-user","text":"Users are created through the CLI with command scout load user , please se the --help argument for more information. Email is used as user identification, a user can be admin which means that they have access to all institutes in the instance. Example: >scout load user --user-mail john@doe.com --admin --institute-id cust000 --user-name \"John Doe\" A user can also have access to multiple institutes without being admin. Example: >scout load user -m john@doe.com -i cust000 -i cust001 -u \"John Doe\"","title":"Create a user"},{"location":"user-guide/users/#delete-a-user","text":"Users can be deleted from the CLI. Example: >scout delete user --mail john@doe.com","title":"Delete a user"},{"location":"user-guide/users/#update-a-user","text":"It is possible to update existing users from the command line. It is possible to add or remove admin rights and to add or remove access to institutes. Examples: Give admin rights >scout update user -u john@doe.com --update-role admin Remove admin rights >scout update user -u john@doe.com --remove-admin Add access to institutes Institutes has to exist in database >scout update user -u john@doe.com --add-institute cust003 --add-institute cust004 Remove access from institutes >scout update user -u john@doe.com --remove-institute cust001 --remove-institute cust002","title":"Update a user"},{"location":"user-guide/using-scout/","text":"Pinning a variant If you find a variant that seems interesting enough that you believe someone should follow it up, you could consider \"pinning it\" to the case. This means that it will show up for all users to see in the case view along other pinned variants. A variant can be pinned by anyone and likewise unpinned by anyone (not just the person who originally pinned it). The activity log will store records of who did what for future reference, however. Mark Causative A variant is marked causative when it is confirmed to be disease causing in a case. The variant will show up on the case page as causative variant. A case can have multiple causative variants. When a variant is marked causative, Scout will remember the variant so when when entering a new case Scout will indicate if a variant that was previously marked causative within the same institute exists in the particular case. Dismissing a variant Conversely, often it is possible to judge a variant highly unlikely to cause the patients phenotype, for one of many reasons. Perhaps it is too common locally, is of LoF type in a gene where only GoF mutation has been described in disease, lacks genotype-phenotype correlation in the case of broad panels or has no obvious conceptual impact on the protein generated. The user can choose one or more reasons to dismiss the variant. Dismissed variants are grayed out on variants display, and shown as dismissed in the case report. Mark a variant as mosaic Variants can be marked as mosaic. There are some different alternatives on the variant page depending on the situation. Sending Sanger email It's possible to send an email to a user defined email address with information regarding a variant for Sanger validation. You can access this functionality through the variant detail view in the upper right hand corner. Local Frequency Database This is not really a local frequency database but rather an indication if we have seen a variant before and in what form. It should work as a guide to exclude variants that exists due to artifacts in the sequencing process or if it as been observed in any of the earlier cases. Variants are added to the database in the following way: For each case we pick one affected individual Variants are filtered out based on if they are common or have a very low call quality The remaining variants are stored in loqusdb Each time the user looks at a variant scout will ask locusdb how many times it has been seen across all cases from all institutes (obs.), how many times it has been seen in a homozygous state (homo.) and how many cases these numbers are based on (tot.).","title":"General"},{"location":"user-guide/using-scout/#pinning-a-variant","text":"If you find a variant that seems interesting enough that you believe someone should follow it up, you could consider \"pinning it\" to the case. This means that it will show up for all users to see in the case view along other pinned variants. A variant can be pinned by anyone and likewise unpinned by anyone (not just the person who originally pinned it). The activity log will store records of who did what for future reference, however.","title":"Pinning a variant"},{"location":"user-guide/using-scout/#mark-causative","text":"A variant is marked causative when it is confirmed to be disease causing in a case. The variant will show up on the case page as causative variant. A case can have multiple causative variants. When a variant is marked causative, Scout will remember the variant so when when entering a new case Scout will indicate if a variant that was previously marked causative within the same institute exists in the particular case.","title":"Mark Causative"},{"location":"user-guide/using-scout/#dismissing-a-variant","text":"Conversely, often it is possible to judge a variant highly unlikely to cause the patients phenotype, for one of many reasons. Perhaps it is too common locally, is of LoF type in a gene where only GoF mutation has been described in disease, lacks genotype-phenotype correlation in the case of broad panels or has no obvious conceptual impact on the protein generated. The user can choose one or more reasons to dismiss the variant. Dismissed variants are grayed out on variants display, and shown as dismissed in the case report.","title":"Dismissing a variant"},{"location":"user-guide/using-scout/#mark-a-variant-as-mosaic","text":"Variants can be marked as mosaic. There are some different alternatives on the variant page depending on the situation.","title":"Mark a variant as mosaic"},{"location":"user-guide/using-scout/#sending-sanger-email","text":"It's possible to send an email to a user defined email address with information regarding a variant for Sanger validation. You can access this functionality through the variant detail view in the upper right hand corner.","title":"Sending Sanger email"},{"location":"user-guide/using-scout/#local-frequency-database","text":"This is not really a local frequency database but rather an indication if we have seen a variant before and in what form. It should work as a guide to exclude variants that exists due to artifacts in the sequencing process or if it as been observed in any of the earlier cases. Variants are added to the database in the following way: For each case we pick one affected individual Variants are filtered out based on if they are common or have a very low call quality The remaining variants are stored in loqusdb Each time the user looks at a variant scout will ask locusdb how many times it has been seen across all cases from all institutes (obs.), how many times it has been seen in a homozygous state (homo.) and how many cases these numbers are based on (tot.).","title":"Local Frequency Database"},{"location":"user-guide/variants/","text":"Variants The big list of variants. This page serves as an overview of all data and annotations for a single case. It's meant to allow you to skim through many variants ordered by the ranking. The first couple of columns are meant to give you a sense of place in the overall ranked list. The \"Rank\" column is especially useful after applying various filters. Hovering over both \"1000 Genomes\" (frequency) and \"CADD score\" (severity) columns will reveal additional metrics in a popup. Hovering over \"Inheritance models\" will pop up a list of all possible compounds if the variants follows this pattern. At the bottom of the list you will find a button to load the next batch of variants in the list. To return to the previous batch of variants, just press the browser back button. It's also possible to filter the variants using a number of different criteria. Open the filters panel by clicking the \"filter\" icon in the top right. Here you can fill in form and click \"Filter variants\" to update the list. This is also the place where you switch gene lists. Variant This is the most complex view with a lot of related data presented to the user in a compact way. A lot of thought went into the design of the layout so here it the imagined workflow. Toolbar Two options are added to the right side of the menu: Send Sanger email to an institute related email address. Pin the current variant as interesting so that it shows up in the case view. Mark variant as causative. This is only to be used when a variant is confirmed to be causative - it will set the case to \"solved\" automatically. Fixed header Introduces the basic facts of the variant that the user is often referring back to. As an example you need to refer back to the chromosome when assessing possible inheritance models. Summary This is the first a user looks at when assesing the variant. Rank score/CADD score Disease gene model, possible inheritance models, OMIM model Frequencies CLINSIG number SV frequency - SVDB Structural variant database freqency is annotated with [SVDB](https://github.com/J35P312/SVDB), using a clustering algorithm [DBSCAN](https://en.wikipedia.org/wiki/DBSCAN). Variant type and chromosome are exact, but start and end positions for matches are approximate, and depend on previous cases from the database. In a region with multiple, inexactly positioned events, matching will be more relaxed than if only tightly clustered variants with near similar start and end coordinates have been found. Databases include research cases from Clinical genetics (WGS at NGI), clinical cases with arrayCGH (benign or pathogenic collections), Decipher, SweGen and local cases. Details see Annotations Functional Annotation This is the worst functional impact of all transcripts Clinvar submission of pinned variants Single nucleotide variants, indels, insertions, as well as larger structural variants can be used to create submissions to Clinvar , a free public database of phenotype-genotype associations. One of more pinned variants for a case with assigned phenotype might be used from the Clinvar submission page to create comma separated file to be used in the submission process. The Scout submission form mirrors the fields on the Clinvar submission spreadsheets. Optional case data for one or more pinned variants can also be generated and uploaded together with the variants during the file submission. Prior registration of a user and a submitting organization to the Clinvar portal is required to submit data to the Clinvar database. Region Annotation This is the region of the most severe functional impact GT Call Variant Callers Badges below the GT Call table show the variant caller responsible for the calls and their filter status. A variant with Pass status passed all the filters from its variant callers, whereas a Filtered call was detected by the caller but not deemed passing filter quality. SNVs and indels GATK FreeBayes SAMtools SVs SVs are structural variants, balanced or unbalanced chromosomal abberrations. Size filtering can be done either to show only variants longer than the given size, or shorter if the \"Length shorter than\" checkbox is activated. When the checkbox is ticked, queries are also inclusive of non-existing annotations e.g. SV events without size. Note that some BNDs, like interchromosomal translocations are given with a very large (larger than chromosome) size instead. Scout supports viewing general SVs as encoded in the VCF format specification. Some sample callers that we have worked with include: TIDDIT TIDDIT Locally developed structural variant caller that uses discordant read pair detection and supplementary alignments for split reads from the bam file to call structural variations, including deletions, duplications, inversions and translocations (BND). The number of supporting links is used to call the reliability of the call. Read depth information is used to infer the variant type as well as zygosity where possible. Delivers exact breakpoints when possible. Sensitivity for clinically relevant deletions is 100%, balanced events lower but at a best-in-class >80%. Be advised to consider zygosity calls from balanced events as highly uncertain. Jesper Eisfeldt, Francesco Vezzi, Pall Olason, Daniel Nilsson, Anna Lindstrand TIDDIT, an efficient and comprehensive structural variant caller for massive parallel sequencing data F1000Research 2017, 6:664 CNVnator CNVnator Well established read depth aware CNV caller. Infers deletions and duplications from binning read depth. Will call inexact boundaries for the events. Effectively 100% sensitivity for large CNVs in accessible regions. Be wary if CNVnator did not call your large unbalanced variant - that may indicate a false positive. Comparatively decent zygosity-calls from v0.3.3. Abyzov A, Urban AE, Snyder M, Gerstein M. CNVnator: an approach to discover, genotype, and characterize typical and atypical CNVs from family and population genome sequencing. Genome Res. 2011 Jun;21(6):974-84. Manta Manta : Internationally well used de-facto standard for structural variant calling. Uses discordant read pairs and split read graphs to call variants. Comparatively good sensitivity for insertions. Specificity is not always optimal. Be adviced of potential false positive calls of long range connectivity, in particular when in conflict with callers that rely more on read-depth. Chen, X. et al. (2016) Manta: rapid detection of structural variants and indels for germline and cancer sequencing applications. Bioinformatics, 32, 1220-1222. Be advised to consider zygosity calls from balanced events as uncertain. Delly Delly The long standing, well known and decently performing tool Delly uses discordant read-pairs and split reads to call structural variants. Calls made are reliable from >300bp, but also sports an effective indel detection mode for sub-readlength indels. As with manta, Specificity is not always optimal. Be adviced of potential false positive calls of long range connectivity, in particular when in conflict with callers that rely more on read-depth. Be advised to consider zygosity calls as uncertain. Tobias Rausch, Thomas Zichner, Andreas Schlattl, Adrian M. Stuetz, Vladimir Benes, Jan O. Korbel. Delly: structural variant discovery by integrated paired-end and split-read analysis. Bioinformatics 2012 28: i333-i339. STRs Scout supports viewing STRs, Short Tandem Repeats, initially only for a clinical panel. Tested callers include: ExpansionHunter ExpansionHunter Longer-than-readlength analysis of STR sites. Requires a pre-made panel file noting the location of target sites to analyze, then rapidly analyses bam files. Dolzenko et al Detection of long repeat expansions from PCR-free whole-genome sequence data . Annotating STRs The out put files of expansion hunter if preferably annotated with stranger before loaded into scout. Compounds (top 20) Only interesting when the compound inheritance pattern is required, the list can be very long but is by default cropped to the top 20 highest ranked ones as shown in the heading.","title":"Variants"},{"location":"user-guide/variants/#variants","text":"The big list of variants. This page serves as an overview of all data and annotations for a single case. It's meant to allow you to skim through many variants ordered by the ranking. The first couple of columns are meant to give you a sense of place in the overall ranked list. The \"Rank\" column is especially useful after applying various filters. Hovering over both \"1000 Genomes\" (frequency) and \"CADD score\" (severity) columns will reveal additional metrics in a popup. Hovering over \"Inheritance models\" will pop up a list of all possible compounds if the variants follows this pattern. At the bottom of the list you will find a button to load the next batch of variants in the list. To return to the previous batch of variants, just press the browser back button. It's also possible to filter the variants using a number of different criteria. Open the filters panel by clicking the \"filter\" icon in the top right. Here you can fill in form and click \"Filter variants\" to update the list. This is also the place where you switch gene lists.","title":"Variants"},{"location":"user-guide/variants/#variant","text":"This is the most complex view with a lot of related data presented to the user in a compact way. A lot of thought went into the design of the layout so here it the imagined workflow.","title":"Variant"},{"location":"user-guide/variants/#toolbar","text":"Two options are added to the right side of the menu: Send Sanger email to an institute related email address. Pin the current variant as interesting so that it shows up in the case view. Mark variant as causative. This is only to be used when a variant is confirmed to be causative - it will set the case to \"solved\" automatically.","title":"Toolbar"},{"location":"user-guide/variants/#fixed-header","text":"Introduces the basic facts of the variant that the user is often referring back to. As an example you need to refer back to the chromosome when assessing possible inheritance models.","title":"Fixed header"},{"location":"user-guide/variants/#summary","text":"This is the first a user looks at when assesing the variant. Rank score/CADD score Disease gene model, possible inheritance models, OMIM model Frequencies CLINSIG number","title":"Summary"},{"location":"user-guide/variants/#sv-frequency-svdb","text":"Structural variant database freqency is annotated with [SVDB](https://github.com/J35P312/SVDB), using a clustering algorithm [DBSCAN](https://en.wikipedia.org/wiki/DBSCAN). Variant type and chromosome are exact, but start and end positions for matches are approximate, and depend on previous cases from the database. In a region with multiple, inexactly positioned events, matching will be more relaxed than if only tightly clustered variants with near similar start and end coordinates have been found. Databases include research cases from Clinical genetics (WGS at NGI), clinical cases with arrayCGH (benign or pathogenic collections), Decipher, SweGen and local cases.","title":"SV frequency - SVDB"},{"location":"user-guide/variants/#details","text":"see Annotations","title":"Details"},{"location":"user-guide/variants/#functional-annotation","text":"This is the worst functional impact of all transcripts","title":"Functional Annotation"},{"location":"user-guide/variants/#clinvar-submission-of-pinned-variants","text":"Single nucleotide variants, indels, insertions, as well as larger structural variants can be used to create submissions to Clinvar , a free public database of phenotype-genotype associations. One of more pinned variants for a case with assigned phenotype might be used from the Clinvar submission page to create comma separated file to be used in the submission process. The Scout submission form mirrors the fields on the Clinvar submission spreadsheets. Optional case data for one or more pinned variants can also be generated and uploaded together with the variants during the file submission. Prior registration of a user and a submitting organization to the Clinvar portal is required to submit data to the Clinvar database.","title":"Clinvar submission of pinned variants"},{"location":"user-guide/variants/#region-annotation","text":"This is the region of the most severe functional impact","title":"Region Annotation"},{"location":"user-guide/variants/#gt-call","text":"","title":"GT Call"},{"location":"user-guide/variants/#variant-callers","text":"Badges below the GT Call table show the variant caller responsible for the calls and their filter status. A variant with Pass status passed all the filters from its variant callers, whereas a Filtered call was detected by the caller but not deemed passing filter quality.","title":"Variant Callers"},{"location":"user-guide/variants/#snvs-and-indels","text":"","title":"SNVs and indels"},{"location":"user-guide/variants/#gatk","text":"","title":"GATK"},{"location":"user-guide/variants/#freebayes","text":"","title":"FreeBayes"},{"location":"user-guide/variants/#samtools","text":"","title":"SAMtools"},{"location":"user-guide/variants/#svs","text":"SVs are structural variants, balanced or unbalanced chromosomal abberrations. Size filtering can be done either to show only variants longer than the given size, or shorter if the \"Length shorter than\" checkbox is activated. When the checkbox is ticked, queries are also inclusive of non-existing annotations e.g. SV events without size. Note that some BNDs, like interchromosomal translocations are given with a very large (larger than chromosome) size instead. Scout supports viewing general SVs as encoded in the VCF format specification. Some sample callers that we have worked with include:","title":"SVs"},{"location":"user-guide/variants/#tiddit","text":"TIDDIT Locally developed structural variant caller that uses discordant read pair detection and supplementary alignments for split reads from the bam file to call structural variations, including deletions, duplications, inversions and translocations (BND). The number of supporting links is used to call the reliability of the call. Read depth information is used to infer the variant type as well as zygosity where possible. Delivers exact breakpoints when possible. Sensitivity for clinically relevant deletions is 100%, balanced events lower but at a best-in-class >80%. Be advised to consider zygosity calls from balanced events as highly uncertain. Jesper Eisfeldt, Francesco Vezzi, Pall Olason, Daniel Nilsson, Anna Lindstrand TIDDIT, an efficient and comprehensive structural variant caller for massive parallel sequencing data F1000Research 2017, 6:664","title":"TIDDIT"},{"location":"user-guide/variants/#cnvnator","text":"CNVnator Well established read depth aware CNV caller. Infers deletions and duplications from binning read depth. Will call inexact boundaries for the events. Effectively 100% sensitivity for large CNVs in accessible regions. Be wary if CNVnator did not call your large unbalanced variant - that may indicate a false positive. Comparatively decent zygosity-calls from v0.3.3. Abyzov A, Urban AE, Snyder M, Gerstein M. CNVnator: an approach to discover, genotype, and characterize typical and atypical CNVs from family and population genome sequencing. Genome Res. 2011 Jun;21(6):974-84.","title":"CNVnator"},{"location":"user-guide/variants/#manta","text":"Manta : Internationally well used de-facto standard for structural variant calling. Uses discordant read pairs and split read graphs to call variants. Comparatively good sensitivity for insertions. Specificity is not always optimal. Be adviced of potential false positive calls of long range connectivity, in particular when in conflict with callers that rely more on read-depth. Chen, X. et al. (2016) Manta: rapid detection of structural variants and indels for germline and cancer sequencing applications. Bioinformatics, 32, 1220-1222. Be advised to consider zygosity calls from balanced events as uncertain.","title":"Manta"},{"location":"user-guide/variants/#delly","text":"Delly The long standing, well known and decently performing tool Delly uses discordant read-pairs and split reads to call structural variants. Calls made are reliable from >300bp, but also sports an effective indel detection mode for sub-readlength indels. As with manta, Specificity is not always optimal. Be adviced of potential false positive calls of long range connectivity, in particular when in conflict with callers that rely more on read-depth. Be advised to consider zygosity calls as uncertain. Tobias Rausch, Thomas Zichner, Andreas Schlattl, Adrian M. Stuetz, Vladimir Benes, Jan O. Korbel. Delly: structural variant discovery by integrated paired-end and split-read analysis. Bioinformatics 2012 28: i333-i339.","title":"Delly"},{"location":"user-guide/variants/#strs","text":"Scout supports viewing STRs, Short Tandem Repeats, initially only for a clinical panel. Tested callers include:","title":"STRs"},{"location":"user-guide/variants/#expansionhunter","text":"ExpansionHunter Longer-than-readlength analysis of STR sites. Requires a pre-made panel file noting the location of target sites to analyze, then rapidly analyses bam files. Dolzenko et al Detection of long repeat expansions from PCR-free whole-genome sequence data .","title":"ExpansionHunter"},{"location":"user-guide/variants/#annotating-strs","text":"The out put files of expansion hunter if preferably annotated with stranger before loaded into scout.","title":"Annotating STRs"},{"location":"user-guide/variants/#compounds-top-20","text":"Only interesting when the compound inheritance pattern is required, the list can be very long but is by default cropped to the top 20 highest ranked ones as shown in the heading.","title":"Compounds (top 20)"}]}